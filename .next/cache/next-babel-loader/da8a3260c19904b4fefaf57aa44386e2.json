{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Container, Row, Column } from './styles';\nimport { maskMoney } from '../../components/MaksMoney';\n\nconst FormCalc = () => {\n  const {\n    0: lista,\n    1: setLista\n  } = useState([]);\n  const {\n    control,\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    const redimentoMensal = parseFloat((1 + parseFloat(data.rendimentoAnual) / 100) ** (1 / 12) - 1);\n    console.log(redimentoMensal);\n    const listaTemp = [];\n\n    for (let i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: data.aporteMensal\n        });\n      } else {\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: parseFloat(listaTemp[i - 1].aporteFinal) * redimentoMensal * 100,\n          aporteFinal: parseFloat(data.aporteMensal) + parseFloat(listaTemp[i - 1].aporteFinal) + parseFloat(listaTemp[i - 1].aporteFinal) * (parseFloat(redimentoMensal) / 100)\n        });\n      }\n    }\n\n    console.log(listaTemp);\n  };\n\n  function calcAporteMensal() {\n    const salarioMensal = parseFloat(getValues('salarioMensal').toString().replace('.', '').replace(',', '.'));\n    const percentualAporte = parseInt(getValues('percentualAporte')) / 100;\n    const aporteMensal = parseFloat(percentualAporte * salarioMensal);\n\n    if (aporteMensal) {\n      setValue('aporteMensal', maskMoney((aporteMensal * 100).toString()));\n      const rendaRestante = (salarioMensal - aporteMensal) * 100;\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()));\n    } else {\n      setValue('aporteMensal', maskMoney('000'));\n      setValue('rendaRestante', maskMoney('000'));\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value));\n    calcAporteMensal();\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined);\n    setValue('percentualAporte', undefined);\n    setValue('aporteMensal', undefined);\n    setValue('rendaRestante', undefined);\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Sal\\xE1rio Mensal\"), __jsx(\"input\", {\n    placeholder: \"R$ 0,00\",\n    className: errors.salarioMensal && 'inpt-error',\n    type: \"text\",\n    name: \"salarioMensal\",\n    onChange: onChangeRemunaration,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Percentual de Aporte\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.percentualAporte && 'inpt-error',\n    type: \"text\",\n    name: \"percentualAporte\",\n    onChange: calcAporteMensal,\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Rendomento Anual\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.rendimentoAnual && 'inpt-error',\n    type: \"text\",\n    name: \"rendimentoAnual\",\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Aporte Mensal\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"aporteMensal\",\n    ref: register(),\n    placeholder: \"R$ 0,00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Renda Restante\"), __jsx(\"input\", {\n    placeholder: \"R$ 0,00\",\n    type: \"text\",\n    name: \"rendaRestante\",\n    ref: register(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Calcular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Limpar\",\n    onClick: onChangeLimpar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FormCalc;","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx"],"names":["React","useState","useForm","Container","Row","Column","maskMoney","FormCalc","lista","setLista","control","handleSubmit","register","setValue","errors","getValues","onSubmit","data","redimentoMensal","parseFloat","rendimentoAnual","console","log","listaTemp","i","push","valorInicial","aporteFinal","aporteMensal","rendimento","calcAporteMensal","salarioMensal","toString","replace","percentualAporte","parseInt","rendaRestante","onChangeRemunaration","e","target","value","onChangeLimpar","undefined","required","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Container, Row, Column } from './styles'\nimport { maskMoney } from '../../components/MaksMoney'\n\ninterface IFormInput {\n  salarioMensal: number\n  percentualAporte: number\n  aporteMensal: number\n  rendaRestante: number\n  rendimentoAnual: number\n}\n\nconst FormCalc: React.FC = () => {\n  const [lista, setLista] = useState([])\n  const {\n    control,\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues\n  } = useForm<IFormInput>()\n\n  const onSubmit = (data: IFormInput) => {\n    const redimentoMensal = parseFloat(\n      (1 + parseFloat(data.rendimentoAnual) / 100) ** (1 / 12) - 1\n    )\n    console.log(redimentoMensal)\n    const listaTemp = []\n    for (let i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: data.aporteMensal\n        })\n      } else {\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento:\n            parseFloat(listaTemp[i - 1].aporteFinal) * redimentoMensal * 100,\n          aporteFinal:\n            parseFloat(data.aporteMensal) +\n            parseFloat(listaTemp[i - 1].aporteFinal) +\n            parseFloat(listaTemp[i - 1].aporteFinal) *\n              (parseFloat(redimentoMensal) / 100)\n        })\n      }\n    }\n    console.log(listaTemp)\n  }\n\n  function calcAporteMensal() {\n    const salarioMensal = parseFloat(\n      getValues('salarioMensal').toString().replace('.', '').replace(',', '.')\n    )\n    const percentualAporte = parseInt(getValues('percentualAporte')) / 100\n    const aporteMensal = parseFloat(percentualAporte * salarioMensal)\n\n    if (aporteMensal) {\n      setValue('aporteMensal', maskMoney((aporteMensal * 100).toString()))\n      const rendaRestante = (salarioMensal - aporteMensal) * 100\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()))\n    } else {\n      setValue('aporteMensal', maskMoney('000'))\n      setValue('rendaRestante', maskMoney('000'))\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value))\n    calcAporteMensal()\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined)\n    setValue('percentualAporte', undefined)\n    setValue('aporteMensal', undefined)\n    setValue('rendaRestante', undefined)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container>\n        <Row>\n          <Column>\n            <label>Salário Mensal</label>\n            <input\n              placeholder=\"R$ 0,00\"\n              className={errors.salarioMensal && 'inpt-error'}\n              type=\"text\"\n              name=\"salarioMensal\"\n              onChange={onChangeRemunaration}\n              ref={register({ required: true })}\n            />\n          </Column>\n          <Column>\n            <label>Percentual de Aporte</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.percentualAporte && 'inpt-error'}\n              type=\"text\"\n              name=\"percentualAporte\"\n              onChange={calcAporteMensal}\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n          <Column>\n            <label>Rendomento Anual</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.rendimentoAnual && 'inpt-error'}\n              type=\"text\"\n              name=\"rendimentoAnual\"\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column>\n            <label>Aporte Mensal</label>\n            <input\n              type=\"text\"\n              name=\"aporteMensal\"\n              ref={register()}\n              placeholder=\"R$ 0,00\"\n            />\n          </Column>\n          <Column>\n            <label>Renda Restante</label>\n            <input\n              placeholder=\"R$ 0,00\"\n              type=\"text\"\n              name=\"rendaRestante\"\n              ref={register()}\n            />\n          </Column>\n        </Row>\n        <input type=\"submit\" value=\"Calcular\" />\n        <input type=\"button\" value=\"Limpar\" onClick={onChangeLimpar} />\n      </Container>\n    </form>\n  )\n}\n\nexport default FormCalc\n"]},"metadata":{},"sourceType":"module"}