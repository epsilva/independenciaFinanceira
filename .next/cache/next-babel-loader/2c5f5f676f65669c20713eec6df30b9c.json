{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { Container, Row, Column } from './styles';\nimport { maskMoney } from '../MaksMoney';\nimport { maskDecimal } from '../MaskDecimal';\nimport List from './components/List';\nimport Cards from './components/Cards';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nvar FormCalcPorSalario = function FormCalcPorSalario() {\n  var _useState = useState([]),\n      lista = _useState[0],\n      setLista = _useState[1];\n\n  var _useState2 = useState('0,00'),\n      aporteMensal = _useState2[0],\n      setAporteMensal = _useState2[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      salarioMensal: null,\n      percentualAporte: null,\n      rendimentoAnual: null\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues,\n      control = _useForm.control;\n\n  var onSubmit = function onSubmit(data) {\n    var rendimentoAnual = parseFloat(data.rendimentoAnual.toString().replace(',', '.'));\n    var redimentoMensal = Math.pow(1 + rendimentoAnual / 100, 1 / 12) - 1;\n    console.log(redimentoMensal);\n    var listaTemp = [];\n\n    for (var i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          mes: i + 1,\n          rendimento: 0,\n          valorInicial: 0,\n          aporteFinal: parseFloat(aporteMensal.toString().replace('.', '').replace(',', '.'))\n        });\n      } else {\n        var aporteMe = parseFloat(aporteMensal.toString().replace('.', '').replace(',', '.'));\n        var rendimentoAtual = listaTemp[i - 1].aporteFinal * redimentoMensal;\n        listaTemp.push({\n          mes: i + 1,\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: rendimentoAtual,\n          aporteFinal: aporteMe + listaTemp[i - 1].aporteFinal + rendimentoAtual\n        });\n      }\n    }\n\n    setLista(listaTemp);\n  };\n\n  function calcAporteMensal(e) {\n    if ((e === null || e === void 0 ? void 0 : e.target.name) === 'percentualAporte') {\n      setValue('percentualAporte', maskDecimal(e === null || e === void 0 ? void 0 : e.target.value));\n    }\n\n    if ((e === null || e === void 0 ? void 0 : e.target.name) === 'rendimentoAnual') {\n      setValue('rendimentoAnual', maskDecimal(e === null || e === void 0 ? void 0 : e.target.value));\n    }\n\n    var salarioMensal = parseFloat(getValues('salarioMensal').toString().replace('.', '').replace(',', '.'));\n    var percentualAporte = parseFloat(getValues('percentualAporte').toString().replace(',', '.')) / 100;\n    var aporteMensal = percentualAporte * salarioMensal;\n\n    if (aporteMensal) {\n      setAporteMensal(maskMoney(Number(aporteMensal).toFixed(2).toString()));\n    } else {\n      setAporteMensal(maskMoney('000'));\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value));\n    calcAporteMensal(undefined);\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined);\n    setValue('percentualAporte', undefined);\n    setValue('rendimentoAnual', undefined);\n    setAporteMensal('0,00');\n    setLista([]);\n  }\n\n  useEffect(function () {\n    onChangeLimpar();\n  }, []);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Column, null, __jsx(Controller, {\n    name: \"salarioMensal\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.salarioMensal !== undefined,\n        id: \"standard-basic\",\n        size: \"small\",\n        fullWidth: true,\n        label: \"Sal\\xE1rio Mensal\",\n        onChange: onChangeRemunaration,\n        placeholder: \"0,00\",\n        inputRef: register({\n          required: 'Campo obrigatório'\n        }),\n        InputProps: {\n          name: 'salarioMensal',\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, \"R$\")\n        }\n      });\n    }\n  })), __jsx(Column, null, __jsx(Controller, {\n    name: \"percentualAporte\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.percentualAporte !== undefined,\n        id: \"standard-basic\",\n        label: \"Percentual do Aporte\",\n        onChange: calcAporteMensal,\n        placeholder: \"100%\",\n        size: \"small\",\n        fullWidth: true,\n        inputRef: register({\n          required: 'Campo obrigatório',\n          maxLength: 6\n        }),\n        inputProps: {\n          maxLength: 6,\n          name: 'percentualAporte'\n        },\n        InputProps: {\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(MoneyIcon, null))\n        }\n      });\n    }\n  }))), __jsx(Row, null, __jsx(Column, null, __jsx(\"label\", null, \"Aporte Mensal\"), __jsx(\"h2\", {\n    style: {\n      color: '#000'\n    }\n  }, \"R$ \", aporteMensal)), __jsx(Column, null, __jsx(Controller, {\n    name: \"rendimentoAnual\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.rendimentoAnual !== undefined,\n        id: \"standard-basic\",\n        label: \"Rendimento Anual\",\n        onChange: calcAporteMensal,\n        placeholder: \"100%\",\n        inputRef: register({\n          required: 'Campo obrigatório',\n          maxLength: 6\n        }),\n        size: \"small\",\n        fullWidth: true,\n        inputProps: {\n          maxLength: 6\n        },\n        InputProps: {\n          name: 'rendimentoAnual',\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(TrendingUpIcon, null))\n        }\n      });\n    }\n  }))), __jsx(Row, {\n    style: {\n      justifyContent: 'flex-end'\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: '8px'\n    },\n    fullWidth: true\n  }, \"Calcular\"), __jsx(Button, {\n    type: \"button\",\n    variant: \"contained\",\n    onClick: onChangeLimpar,\n    fullWidth: true\n  }, \"Limpar\"))), lista.length > 0 && __jsx(React.Fragment, null, __jsx(Cards, {\n    lista: lista\n  }), __jsx(List, {\n    lista: lista\n  })));\n};\n\nexport default FormCalcPorSalario;","map":null,"metadata":{},"sourceType":"module"}