{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Container } from './styles';\nvar columns = [{\n  id: 'mes',\n  label: 'MÃªs',\n  minWidth: 20\n}, {\n  id: 'rendimento',\n  label: 'Rendimento (R$)',\n  minWidth: 100\n}, {\n  id: 'valorInicial',\n  label: 'Valor Inicial (R$)',\n  minWidth: 170,\n  format: function format(value) {\n    return value.toLocaleString('pt-Br');\n  }\n}, {\n  id: 'aporteFinal',\n  label: 'Aporte Final',\n  minWidth: 170,\n  format: function format(value) {\n    return value.toLocaleString('pt-Br');\n  }\n}];\n\nvar List = function List(_ref) {\n  var lista = _ref.lista;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(Container, null, lista.length > 0 && __jsx(Paper, {\n    style: {\n      width: '100%'\n    }\n  }, __jsx(TableContainer, null, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      }\n    }, column.label);\n  }))), __jsx(TableBody, null, lista.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, idx) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: idx\n    }, __jsx(TableCell, {\n      key: idx\n    }, row.mes), __jsx(TableCell, {\n      key: idx\n    }, row.rendimento.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })), __jsx(TableCell, {\n      key: idx\n    }, row.valorInicial.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })), __jsx(TableCell, {\n      key: idx\n    }, row.aporteFinal.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: 360,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })));\n};\n\nexport default List;","map":null,"metadata":{},"sourceType":"module"}