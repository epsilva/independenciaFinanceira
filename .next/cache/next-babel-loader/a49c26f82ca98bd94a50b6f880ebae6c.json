{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/independenciaFinanceira/src/components/FormCalcJurosCompostos/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { Container, Row, Column } from './styles';\nimport { maskMoney } from '../MaksMoney';\nimport { maskDecimal } from '../MaskDecimal';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport DateRange from '@material-ui/icons/DateRange';\nimport Card from './components/Card';\nimport LineChart from '../Charts/LineChart';\nimport Info from '@material-ui/icons/Info';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst FormCalcJurosCompostos = () => {\n  const {\n    0: lista,\n    1: setLista\n  } = useState([]);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(true);\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues,\n    control\n  } = useForm({\n    defaultValues: {\n      valorInicial: null,\n      valorMensal: null,\n      taxaJuros: null,\n      tempoMeses: null\n    }\n  });\n  const {\n    0: labels,\n    1: setLabels\n  } = useState();\n  const {\n    0: dataSet,\n    1: setDataSet\n  } = useState();\n\n  const castFloat = valor => {\n    return parseFloat(valor.toString().replace('.', '').replace(',', '.'));\n  };\n\n  const castInt = valor => {\n    return parseInt(valor.toString());\n  };\n\n  const onSubmit = data => {\n    let valorInicial = castFloat(data.valorInicial);\n    let valorMensal = castFloat(data.valorMensal);\n    let taxaJuros = castFloat(data.taxaJuros);\n    let tempoMeses = castInt(data.tempoMeses);\n    let investimentoAcumulado = valorInicial;\n    var totalInvestimentoAcumulado = valorInicial + valorMensal * tempoMeses;\n    let jurosCompostos = 0;\n    let jurosCompostosTotal = 0;\n    const listaCalc = [];\n    const labelsLine = [];\n    const dataLine1 = [];\n    const dataLine2 = [];\n\n    for (let i = 0; i < tempoMeses; i++) {\n      jurosCompostos = investimentoAcumulado * taxaJuros / 100;\n      jurosCompostosTotal += jurosCompostos;\n      investimentoAcumulado += jurosCompostos + valorMensal;\n      listaCalc.push({\n        mes: i,\n        rendimento: jurosCompostosTotal,\n        total: investimentoAcumulado,\n        totalInvestido: totalInvestimentoAcumulado / (tempoMeses / i)\n      });\n      const ms = new Date().getTime() + 2592000000 * i;\n      const now = new Date(ms);\n      labelsLine.push(`${now.getMonth() + 1}/${now.getFullYear()}`);\n      dataLine2.push(investimentoAcumulado);\n      dataLine1.push(totalInvestimentoAcumulado / (tempoMeses / i));\n    }\n\n    setLista(listaCalc);\n    setLabels(labelsLine);\n    setDataSet([{\n      label: 'Total Investido',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: dataLine1\n    }, {\n      label: 'Total Acumulado',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: '#36A2EB',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#36A2EB',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#36A2EB',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: dataLine2\n    }]); // var valorReceber = totalInvestimentoAcumulado + jurosCompostosTotal\n  };\n\n  function onChangeLimpar() {\n    setValue('valorInicial', undefined);\n    setValue('valorMensal', undefined);\n    setValue('taxaJuros', undefined);\n    setValue('tempoMeses', undefined);\n    setLista([]);\n    setLabels([]);\n    setDataSet([]);\n  }\n\n  function onChangeValorInicial(e) {\n    setValue('valorInicial', maskMoney(e.target.value));\n  }\n\n  function onChangeValorMensal(e) {\n    setValue('valorMensal', maskMoney(e.target.value));\n  }\n\n  function onChangeTaxaJuros(e) {\n    setValue('taxaJuros', maskDecimal(e === null || e === void 0 ? void 0 : e.target.value));\n  }\n\n  useEffect(() => {\n    onChangeLimpar();\n    setShowModal(localStorage.getItem(window.location.pathname) === null);\n  }, []);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"valorInicial\",\n    control: control,\n    render: () => __jsx(TextField, {\n      error: errors.valorInicial !== undefined,\n      id: \"standard-basic\",\n      size: \"small\",\n      fullWidth: true,\n      label: __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, \"Valor Inicial\", ' ', __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, __jsx(Tooltip, {\n        title: \"Aqui ser\\xE1 informado o valor incial que ser\\xE1 usado nas suas aplica\\xE7\\xF5es\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, __jsx(Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }\n      })))),\n      placeholder: \"5.000,00\",\n      onChange: onChangeValorInicial,\n      inputRef: register({\n        required: 'Campo obrigatório'\n      }),\n      InputProps: {\n        name: 'valorInicial',\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }\n        }, \"R$\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"valorMensal\",\n    control: control,\n    render: () => __jsx(TextField, {\n      error: errors.valorMensal !== undefined,\n      id: \"standard-basic\",\n      label: __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"Valor Mensal\", ' ', __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 23\n        }\n      }, __jsx(Tooltip, {\n        title: \"Aqui ser\\xE1 informado o valor que ser\\xE1 aplicado mensalmento\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, __jsx(Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 27\n        }\n      })))),\n      placeholder: \"500,00\",\n      size: \"small\",\n      fullWidth: true,\n      onChange: onChangeValorMensal,\n      inputRef: register({\n        required: 'Campo obrigatório'\n      }),\n      inputProps: {\n        name: 'valorMensal'\n      },\n      InputProps: {\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 23\n          }\n        }, \"R$\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"taxaJuros\",\n    control: control,\n    render: () => __jsx(TextField, {\n      error: errors.taxaJuros !== undefined,\n      id: \"standard-basic\",\n      label: __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, \"Taxa Juros Mensal\", ' ', __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, __jsx(Tooltip, {\n        title: \"Aqui ser\\xE1 informado a taxa de juros que suas aplica\\xE7\\xF5es est\\xE1 rendendo por m\\xEAs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, __jsx(Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      })))),\n      placeholder: \"0,65%\",\n      onChange: onChangeTaxaJuros,\n      inputRef: register({\n        required: 'Campo obrigatório',\n        maxLength: 6\n      }),\n      size: \"small\",\n      fullWidth: true,\n      inputProps: {\n        maxLength: 6,\n        name: 'taxaJuros'\n      },\n      InputProps: {\n        name: 'taxaJuros',\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }, __jsx(TrendingUpIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"tempoMeses\",\n    control: control,\n    render: () => __jsx(TextField, {\n      error: errors.tempoMeses !== undefined,\n      id: \"standard-basic\",\n      label: __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, \"Tempo em Meses\", ' ', __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 23\n        }\n      }, __jsx(Tooltip, {\n        title: \"Aqui ser\\xE1 informado o tempo que que desejas manter seus investimentos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, __jsx(Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 27\n        }\n      })))),\n      placeholder: \"360\",\n      inputRef: register({\n        required: 'Campo obrigatório',\n        maxLength: 3\n      }),\n      size: \"small\",\n      fullWidth: true,\n      inputProps: {\n        maxLength: 3\n      },\n      InputProps: {\n        name: 'tempoMeses',\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 23\n          }\n        }, __jsx(DateRange, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: '8px'\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, \"Calcular\"), __jsx(Button, {\n    type: \"button\",\n    variant: \"contained\",\n    onClick: onChangeLimpar,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, \"Limpar\"))), lista.length > 0 && __jsx(React.Fragment, null, __jsx(Card, {\n    formJuros: lista[lista.length - 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), __jsx(LineChart, {\n    labels: labels,\n    dataSet: dataSet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default FormCalcJurosCompostos;","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/independenciaFinanceira/src/components/FormCalcJurosCompostos/index.tsx"],"names":["React","useEffect","useState","useForm","Controller","Button","Container","Row","Column","maskMoney","maskDecimal","TextField","InputAdornment","TrendingUpIcon","DateRange","Card","LineChart","Info","Tooltip","FormCalcJurosCompostos","lista","setLista","showModal","setShowModal","handleSubmit","register","setValue","errors","getValues","control","defaultValues","valorInicial","valorMensal","taxaJuros","tempoMeses","labels","setLabels","dataSet","setDataSet","castFloat","valor","parseFloat","toString","replace","castInt","parseInt","onSubmit","data","investimentoAcumulado","totalInvestimentoAcumulado","jurosCompostos","jurosCompostosTotal","listaCalc","labelsLine","dataLine1","dataLine2","i","push","mes","rendimento","total","totalInvestido","ms","Date","getTime","now","getMonth","getFullYear","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","onChangeLimpar","undefined","onChangeValorInicial","e","target","value","onChangeValorMensal","onChangeTaxaJuros","localStorage","getItem","window","location","pathname","required","name","startAdornment","maxLength","justifyContent","marginRight","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,UAAvC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,sBAAgC,GAAG,MAAM;AAC7C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACoB,SAAD;AAAA,OAAYC;AAAZ,MAA4BrB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AACJsB,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MAOF1B,OAAO,CAAkB;AAC3B2B,IAAAA,aAAa,EAAE;AACbC,MAAAA,YAAY,EAAE,IADD;AAEbC,MAAAA,WAAW,EAAE,IAFA;AAGbC,MAAAA,SAAS,EAAE,IAHE;AAIbC,MAAAA,UAAU,EAAE;AAJC;AADY,GAAlB,CAPX;AAeA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBlC,QAAQ,EAApC;AACA,QAAM;AAAA,OAACmC,OAAD;AAAA,OAAUC;AAAV,MAAwBpC,QAAQ,EAAtC;;AAEA,QAAMqC,SAAS,GAAGC,KAAK,IAAI;AACzB,WAAOC,UAAU,CAACD,KAAK,CAACE,QAAN,GAAiBC,OAAjB,CAAyB,GAAzB,EAA8B,EAA9B,EAAkCA,OAAlC,CAA0C,GAA1C,EAA+C,GAA/C,CAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGJ,KAAK,IAAI;AACvB,WAAOK,QAAQ,CAACL,KAAK,CAACE,QAAN,EAAD,CAAf;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAIC,IAAD,IAA2B;AAC1C,QAAIhB,YAAY,GAAGQ,SAAS,CAACQ,IAAI,CAAChB,YAAN,CAA5B;AACA,QAAIC,WAAW,GAAGO,SAAS,CAACQ,IAAI,CAACf,WAAN,CAA3B;AACA,QAAIC,SAAS,GAAGM,SAAS,CAACQ,IAAI,CAACd,SAAN,CAAzB;AACA,QAAIC,UAAU,GAAGU,OAAO,CAACG,IAAI,CAACb,UAAN,CAAxB;AAEA,QAAIc,qBAAqB,GAAGjB,YAA5B;AACA,QAAIkB,0BAA0B,GAAGlB,YAAY,GAAGC,WAAW,GAAGE,UAA9D;AAEA,QAAIgB,cAAc,GAAG,CAArB;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AAEA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,UAAoB,GAAG,EAA7B;AACA,UAAMC,SAAmB,GAAG,EAA5B;AACA,UAAMC,SAAmB,GAAG,EAA5B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,UAApB,EAAgCsB,CAAC,EAAjC,EAAqC;AACnCN,MAAAA,cAAc,GAAIF,qBAAqB,GAAGf,SAAzB,GAAsC,GAAvD;AACAkB,MAAAA,mBAAmB,IAAID,cAAvB;AACAF,MAAAA,qBAAqB,IAAIE,cAAc,GAAGlB,WAA1C;AACAoB,MAAAA,SAAS,CAACK,IAAV,CAAe;AACbC,QAAAA,GAAG,EAAEF,CADQ;AAEbG,QAAAA,UAAU,EAAER,mBAFC;AAGbS,QAAAA,KAAK,EAAEZ,qBAHM;AAIba,QAAAA,cAAc,EAAEZ,0BAA0B,IAAIf,UAAU,GAAGsB,CAAjB;AAJ7B,OAAf;AAOA,YAAMM,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,aAAaR,CAA/C;AACA,YAAMS,GAAG,GAAG,IAAIF,IAAJ,CAASD,EAAT,CAAZ;AAEAT,MAAAA,UAAU,CAACI,IAAX,CAAiB,GAAEQ,GAAG,CAACC,QAAJ,KAAiB,CAAE,IAAGD,GAAG,CAACE,WAAJ,EAAkB,EAA3D;AACAZ,MAAAA,SAAS,CAACE,IAAV,CAAeT,qBAAf;AACAM,MAAAA,SAAS,CAACG,IAAV,CAAeR,0BAA0B,IAAIf,UAAU,GAAGsB,CAAjB,CAAzC;AACD;;AACDnC,IAAAA,QAAQ,CAAC+B,SAAD,CAAR;AACAhB,IAAAA,SAAS,CAACiB,UAAD,CAAT;AACAf,IAAAA,UAAU,CAAC,CACT;AACE8B,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,sBAJnB;AAKEC,MAAAA,WAAW,EAAE,oBALf;AAMEC,MAAAA,cAAc,EAAE,MANlB;AAOEC,MAAAA,UAAU,EAAE,EAPd;AAQEC,MAAAA,gBAAgB,EAAE,GARpB;AASEC,MAAAA,eAAe,EAAE,OATnB;AAUEC,MAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,MAAAA,oBAAoB,EAAE,MAXxB;AAYEC,MAAAA,gBAAgB,EAAE,CAZpB;AAaEC,MAAAA,gBAAgB,EAAE,CAbpB;AAcEC,MAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,MAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,MAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,MAAAA,WAAW,EAAE,CAjBf;AAkBEC,MAAAA,cAAc,EAAE,EAlBlB;AAmBEtC,MAAAA,IAAI,EAAEO;AAnBR,KADS,EAsBT;AACEc,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,sBAJnB;AAKEC,MAAAA,WAAW,EAAE,SALf;AAMEC,MAAAA,cAAc,EAAE,MANlB;AAOEC,MAAAA,UAAU,EAAE,EAPd;AAQEC,MAAAA,gBAAgB,EAAE,GARpB;AASEC,MAAAA,eAAe,EAAE,OATnB;AAUEC,MAAAA,gBAAgB,EAAE,SAVpB;AAWEC,MAAAA,oBAAoB,EAAE,MAXxB;AAYEC,MAAAA,gBAAgB,EAAE,CAZpB;AAaEC,MAAAA,gBAAgB,EAAE,CAbpB;AAcEC,MAAAA,yBAAyB,EAAE,SAd7B;AAeEC,MAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,MAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,MAAAA,WAAW,EAAE,CAjBf;AAkBEC,MAAAA,cAAc,EAAE,EAlBlB;AAmBEtC,MAAAA,IAAI,EAAEQ;AAnBR,KAtBS,CAAD,CAAV,CApC0C,CAiF1C;AACD,GAlFD;;AAoFA,WAAS+B,cAAT,GAA0B;AACxB5D,IAAAA,QAAQ,CAAC,cAAD,EAAiB6D,SAAjB,CAAR;AACA7D,IAAAA,QAAQ,CAAC,aAAD,EAAgB6D,SAAhB,CAAR;AACA7D,IAAAA,QAAQ,CAAC,WAAD,EAAc6D,SAAd,CAAR;AACA7D,IAAAA,QAAQ,CAAC,YAAD,EAAe6D,SAAf,CAAR;AACAlE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAe,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,WAASkD,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/B/D,IAAAA,QAAQ,CAAC,cAAD,EAAiBjB,SAAS,CAACgF,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,CAAR;AACD;;AAED,WAASC,mBAAT,CAA6BH,CAA7B,EAAgC;AAC9B/D,IAAAA,QAAQ,CAAC,aAAD,EAAgBjB,SAAS,CAACgF,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB,CAAR;AACD;;AAED,WAASE,iBAAT,CAA2BJ,CAA3B,EAA8B;AAC5B/D,IAAAA,QAAQ,CAAC,WAAD,EAAchB,WAAW,CAAC+E,CAAD,aAACA,CAAD,uBAACA,CAAC,CAAEC,MAAH,CAAUC,KAAX,CAAzB,CAAR;AACD;;AAED1F,EAAAA,SAAS,CAAC,MAAM;AACdqF,IAAAA,cAAc;AACd/D,IAAAA,YAAY,CAACuE,YAAY,CAACC,OAAb,CAAqBC,MAAM,CAACC,QAAP,CAAgBC,QAArC,MAAmD,IAApD,CAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAM,IAAA,QAAQ,EAAE1E,YAAY,CAACsB,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,OAAO,EAAEjB,OAFX;AAGE,IAAA,MAAM,EAAE,MACN,MAAC,SAAD;AACE,MAAA,KAAK,EAAEF,MAAM,CAACI,YAAP,KAAwBwD,SADjC;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,KAAK,EACH,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgB,GADhB,EAEE,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CANJ;AAeE,MAAA,WAAW,EAAC,UAfd;AAgBE,MAAA,QAAQ,EAAEC,oBAhBZ;AAiBE,MAAA,QAAQ,EAAE/D,QAAQ,CAAC;AACjB0E,QAAAA,QAAQ,EAAE;AADO,OAAD,CAjBpB;AAoBE,MAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,cADI;AAEVC,QAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHQ,OApBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAoCE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAExE,OAFX;AAGE,IAAA,MAAM,EAAE,MACN,MAAC,SAAD;AACE,MAAA,KAAK,EAAEF,MAAM,CAACK,WAAP,KAAuBuD,SADhC;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,KAAK,EACH,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACe,GADf,EAEE,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CAJJ;AAaE,MAAA,WAAW,EAAC,QAbd;AAcE,MAAA,IAAI,EAAC,OAdP;AAeE,MAAA,SAAS,MAfX;AAgBE,MAAA,QAAQ,EAAEK,mBAhBZ;AAiBE,MAAA,QAAQ,EAAEnE,QAAQ,CAAC;AACjB0E,QAAAA,QAAQ,EAAE;AADO,OAAD,CAjBpB;AAoBE,MAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE;AADI,OApBd;AAuBE,MAAA,UAAU,EAAE;AACVC,QAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ,OAvBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApCF,CADF,EA2EE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAExE,OAFX;AAGE,IAAA,MAAM,EAAE,MACN,MAAC,SAAD;AACE,MAAA,KAAK,EAAEF,MAAM,CAACM,SAAP,KAAqBsD,SAD9B;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,KAAK,EACH,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoB,GADpB,EAEE,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,8FAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CAJJ;AAaE,MAAA,WAAW,EAAC,OAbd;AAcE,MAAA,QAAQ,EAAEM,iBAdZ;AAeE,MAAA,QAAQ,EAAEpE,QAAQ,CAAC;AACjB0E,QAAAA,QAAQ,EAAE,mBADO;AAEjBG,QAAAA,SAAS,EAAE;AAFM,OAAD,CAfpB;AAmBE,MAAA,IAAI,EAAC,OAnBP;AAoBE,MAAA,SAAS,MApBX;AAqBE,MAAA,UAAU,EAAE;AACVA,QAAAA,SAAS,EAAE,CADD;AAEVF,QAAAA,IAAI,EAAE;AAFI,OArBd;AAyBE,MAAA,UAAU,EAAE;AACVA,QAAAA,IAAI,EAAE,WADI;AAEVC,QAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAHQ,OAzBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EA2CE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,OAAO,EAAExE,OAFX;AAGE,IAAA,MAAM,EAAE,MACN,MAAC,SAAD;AACE,MAAA,KAAK,EAAEF,MAAM,CAACO,UAAP,KAAsBqD,SAD/B;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,KAAK,EACH,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACiB,GADjB,EAEE,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CAJJ;AAaE,MAAA,WAAW,EAAC,KAbd;AAcE,MAAA,QAAQ,EAAE9D,QAAQ,CAAC;AACjB0E,QAAAA,QAAQ,EAAE,mBADO;AAEjBG,QAAAA,SAAS,EAAE;AAFM,OAAD,CAdpB;AAkBE,MAAA,IAAI,EAAC,OAlBP;AAmBE,MAAA,SAAS,MAnBX;AAoBE,MAAA,UAAU,EAAE;AACVA,QAAAA,SAAS,EAAE;AADD,OApBd;AAuBE,MAAA,UAAU,EAAE;AACVF,QAAAA,IAAI,EAAE,YADI;AAEVC,QAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAHQ,OAvBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3CF,CA3EF,EA+JE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,cAAc,EAAE;AAAlB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAJT;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAElB,cAHX;AAIE,IAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CA/JF,CADF,EAoLGlE,KAAK,CAACqF,MAAN,GAAe,CAAf,IACC,4BACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAErF,KAAK,CAACA,KAAK,CAACqF,MAAN,GAAe,CAAhB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAEtE,MAAnB;AAA2B,IAAA,OAAO,EAAEE,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArLJ,CADF;AA6LD,CAzUD;;AA2UA,eAAelB,sBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport Button from '@material-ui/core/Button'\nimport { Container, Row, Column } from './styles'\nimport { maskMoney } from '../MaksMoney'\nimport { maskDecimal } from '../MaskDecimal'\nimport { IFormInputJuros, IOptionsCharts } from '../types'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\nimport DateRange from '@material-ui/icons/DateRange'\nimport Card from './components/Card'\nimport LineChart from '../Charts/LineChart'\nimport Info from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst FormCalcJurosCompostos: React.FC = () => {\n  const [lista, setLista] = useState([])\n  const [showModal, setShowModal] = useState(true)\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues,\n    control\n  } = useForm<IFormInputJuros>({\n    defaultValues: {\n      valorInicial: null,\n      valorMensal: null,\n      taxaJuros: null,\n      tempoMeses: null\n    }\n  })\n  const [labels, setLabels] = useState<string[]>()\n  const [dataSet, setDataSet] = useState<IOptionsCharts[]>()\n\n  const castFloat = valor => {\n    return parseFloat(valor.toString().replace('.', '').replace(',', '.'))\n  }\n\n  const castInt = valor => {\n    return parseInt(valor.toString())\n  }\n\n  const onSubmit = (data: IFormInputJuros) => {\n    let valorInicial = castFloat(data.valorInicial)\n    let valorMensal = castFloat(data.valorMensal)\n    let taxaJuros = castFloat(data.taxaJuros)\n    let tempoMeses = castInt(data.tempoMeses)\n\n    let investimentoAcumulado = valorInicial\n    var totalInvestimentoAcumulado = valorInicial + valorMensal * tempoMeses\n\n    let jurosCompostos = 0\n    let jurosCompostosTotal = 0\n\n    const listaCalc = []\n    const labelsLine: string[] = []\n    const dataLine1: number[] = []\n    const dataLine2: number[] = []\n    for (let i = 0; i < tempoMeses; i++) {\n      jurosCompostos = (investimentoAcumulado * taxaJuros) / 100\n      jurosCompostosTotal += jurosCompostos\n      investimentoAcumulado += jurosCompostos + valorMensal\n      listaCalc.push({\n        mes: i,\n        rendimento: jurosCompostosTotal,\n        total: investimentoAcumulado,\n        totalInvestido: totalInvestimentoAcumulado / (tempoMeses / i)\n      })\n\n      const ms = new Date().getTime() + 2592000000 * i\n      const now = new Date(ms)\n\n      labelsLine.push(`${now.getMonth() + 1}/${now.getFullYear()}`)\n      dataLine2.push(investimentoAcumulado)\n      dataLine1.push(totalInvestimentoAcumulado / (tempoMeses / i))\n    }\n    setLista(listaCalc)\n    setLabels(labelsLine)\n    setDataSet([\n      {\n        label: 'Total Investido',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: dataLine1\n      },\n      {\n        label: 'Total Acumulado',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: '#36A2EB',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#36A2EB',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#36A2EB',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: dataLine2\n      }\n    ])\n\n    // var valorReceber = totalInvestimentoAcumulado + jurosCompostosTotal\n  }\n\n  function onChangeLimpar() {\n    setValue('valorInicial', undefined)\n    setValue('valorMensal', undefined)\n    setValue('taxaJuros', undefined)\n    setValue('tempoMeses', undefined)\n    setLista([])\n    setLabels([])\n    setDataSet([])\n  }\n\n  function onChangeValorInicial(e) {\n    setValue('valorInicial', maskMoney(e.target.value))\n  }\n\n  function onChangeValorMensal(e) {\n    setValue('valorMensal', maskMoney(e.target.value))\n  }\n\n  function onChangeTaxaJuros(e) {\n    setValue('taxaJuros', maskDecimal(e?.target.value))\n  }\n\n  useEffect(() => {\n    onChangeLimpar()\n    setShowModal(localStorage.getItem(window.location.pathname) === null)\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container>\n        <Row>\n          <Column>\n            <Controller\n              name=\"valorInicial\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.valorInicial !== undefined}\n                  id=\"standard-basic\"\n                  size=\"small\"\n                  fullWidth\n                  label={\n                    <Row>\n                      Valor Inicial{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado o valor incial que será usado nas suas aplicações\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  placeholder=\"5.000,00\"\n                  onChange={onChangeValorInicial}\n                  inputRef={register({\n                    required: 'Campo obrigatório'\n                  })}\n                  InputProps={{\n                    name: 'valorInicial',\n                    startAdornment: (\n                      <InputAdornment position=\"start\">R$</InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n          <Column>\n            <Controller\n              name=\"valorMensal\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.valorMensal !== undefined}\n                  id=\"standard-basic\"\n                  label={\n                    <Row>\n                      Valor Mensal{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado o valor que será aplicado mensalmento\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  placeholder=\"500,00\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={onChangeValorMensal}\n                  inputRef={register({\n                    required: 'Campo obrigatório'\n                  })}\n                  inputProps={{\n                    name: 'valorMensal'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">R$</InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column>\n            <Controller\n              name=\"taxaJuros\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.taxaJuros !== undefined}\n                  id=\"standard-basic\"\n                  label={\n                    <Row>\n                      Taxa Juros Mensal{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado a taxa de juros que suas aplicações está rendendo por mês\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  placeholder=\"0,65%\"\n                  onChange={onChangeTaxaJuros}\n                  inputRef={register({\n                    required: 'Campo obrigatório',\n                    maxLength: 6\n                  })}\n                  size=\"small\"\n                  fullWidth\n                  inputProps={{\n                    maxLength: 6,\n                    name: 'taxaJuros'\n                  }}\n                  InputProps={{\n                    name: 'taxaJuros',\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TrendingUpIcon />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n          <Column>\n            <Controller\n              name=\"tempoMeses\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.tempoMeses !== undefined}\n                  id=\"standard-basic\"\n                  label={\n                    <Row>\n                      Tempo em Meses{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado o tempo que que desejas manter seus investimentos\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  placeholder=\"360\"\n                  inputRef={register({\n                    required: 'Campo obrigatório',\n                    maxLength: 3\n                  })}\n                  size=\"small\"\n                  fullWidth\n                  inputProps={{\n                    maxLength: 3\n                  }}\n                  InputProps={{\n                    name: 'tempoMeses',\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <DateRange />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n        </Row>\n        <Row style={{ justifyContent: 'flex-end' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginRight: '8px' }}\n            fullWidth\n          >\n            Calcular\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            onClick={onChangeLimpar}\n            fullWidth\n          >\n            Limpar\n          </Button>\n        </Row>\n      </Container>\n      {lista.length > 0 && (\n        <>\n          <Card formJuros={lista[lista.length - 1]} />\n          <LineChart labels={labels} dataSet={dataSet} />\n        </>\n      )}\n    </form>\n  )\n}\n\nexport default FormCalcJurosCompostos\n"]},"metadata":{},"sourceType":"module"}