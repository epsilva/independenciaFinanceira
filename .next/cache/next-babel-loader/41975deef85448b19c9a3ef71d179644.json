{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextField, Checkbox } from '@material-ui/core';\n\nfunction FormCalc() {\n  _s();\n\n  var _this = this;\n\n  var methods = useForm();\n  var handleSubmit = methods.handleSubmit,\n      control = methods.control,\n      reset = methods.reset;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Controller, {\n    as: TextField,\n    name: \"TextField\",\n    control: control,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(Controller, {\n    name: \"MyCheckbox\",\n    control: control,\n    defaultValue: false,\n    rules: {\n      required: true\n    },\n    render: function render(props) {\n      return __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return props.onChange(e.target.checked);\n        },\n        checked: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      });\n    } // props contains: onChange, onBlur and value\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(FormCalc, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c = FormCalc;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCalc\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx"],"names":["React","useForm","Controller","TextField","Checkbox","FormCalc","methods","handleSubmit","control","reset","onSubmit","data","console","log","required","props","e","onChange","target","checked","value"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;;AAOA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClB,MAAMC,OAAO,GAAGL,OAAO,EAAvB;AADkB,MAEVM,YAFU,GAEuBD,OAFvB,CAEVC,YAFU;AAAA,MAEIC,OAFJ,GAEuBF,OAFvB,CAEIE,OAFJ;AAAA,MAEaC,KAFb,GAEuBH,OAFvB,CAEaG,KAFb;;AAGlB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAuBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAvB;AAAA,GAAjB;;AAEA,SACE;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,UAAD;AACE,IAAA,EAAE,EAAEP,SADN;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,OAAO,EAAEK,OAHX;AAIE,IAAA,YAAY,EAAC,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,OAAO,EAAEA,OAFX;AAGE,IAAA,YAAY,EAAE,KAHhB;AAIE,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAJT;AAKE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACX,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAID,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,OAAxB,CAAJ;AAAA,SADb;AAEE,QAAA,OAAO,EAAEJ,KAAK,CAACK,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW;AAAA,KALf,CAUK;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAyBD;;GA9BQf,Q;UACSJ,O;;;KADTI,Q","sourcesContent":["import React from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { TextField, Checkbox } from '@material-ui/core'\n\ninterface IFormInputs {\n  TextField: string\n  MyCheckbox: boolean\n}\n\nfunction FormCalc() {\n  const methods = useForm<IFormInputs>()\n  const { handleSubmit, control, reset } = methods\n  const onSubmit = (data: IFormInputs) => console.log(data)\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* Option 1: pass a component to the Controller. */}\n      <Controller\n        as={TextField}\n        name=\"TextField\"\n        control={control}\n        defaultValue=\"\"\n      />\n\n      {/* Option 2: use render props to assign events and value */}\n      <Controller\n        name=\"MyCheckbox\"\n        control={control}\n        defaultValue={false}\n        rules={{ required: true }}\n        render={props => (\n          <Checkbox\n            onChange={e => props.onChange(e.target.checked)}\n            checked={props.value}\n          />\n        )} // props contains: onChange, onBlur and value\n      />\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}