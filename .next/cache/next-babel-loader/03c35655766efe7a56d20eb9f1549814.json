{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider } from 'styled-components';\nimport Header from '../components/Header';\nimport GlobalStyle from '../styles/global';\nimport theme from '../styles/theme';\nimport routes from 'next-routes';\nimport * as gtag from '../../lib/gtag';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  var _routes$Router$router;\n\n  const router = useRouter();\n  useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url);\n    };\n\n    router.events.on('routeChangeComplete', handleRouteChange);\n    return () => {\n      router.events.off('routeChangeComplete', handleRouteChange);\n    };\n  }, [router.events]);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })), __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), ((_routes$Router$router = new routes().Router.router) === null || _routes$Router$router === void 0 ? void 0 : _routes$Router$router.asPath) !== '/login' && __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 59\n    }\n  }));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/pages/_app.tsx"],"names":["React","useEffect","useRouter","ThemeProvider","Header","GlobalStyle","theme","routes","gtag","MyApp","Component","pageProps","router","handleRouteChange","url","pageview","events","on","off","Router","asPath"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;;AAEA,MAAMC,KAAyB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAAA;;AAC9D,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,iBAAiB,GAAGC,GAAG,IAAI;AAC/BN,MAAAA,IAAI,CAACO,QAAL,CAAcD,GAAd;AACD,KAFD;;AAGAF,IAAAA,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCJ,iBAAxC;AACA,WAAO,MAAM;AACXD,MAAAA,MAAM,CAACI,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCL,iBAAzC;AACD,KAFD;AAGD,GARQ,EAQN,CAACD,MAAM,CAACI,MAAR,CARM,CAAT;AAUA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,8BAAIJ,MAAJ,GAAaY,MAAb,CAAoBP,MAApB,gFAA4BQ,MAA5B,MAAuC,QAAvC,IAAmD,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHtD,CADF;AAOD,CAnBD;;AAqBA,eAAeX,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { AppProps } from 'next/app'\nimport { ThemeProvider } from 'styled-components'\nimport Header from '../components/Header'\nimport GlobalStyle from '../styles/global'\nimport theme from '../styles/theme'\nimport routes from 'next-routes'\nimport * as gtag from '../../lib/gtag'\n\nconst MyApp: React.FC<AppProps> = ({ Component, pageProps }) => {\n  const router = useRouter()\n  useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url)\n    }\n    router.events.on('routeChangeComplete', handleRouteChange)\n    return () => {\n      router.events.off('routeChangeComplete', handleRouteChange)\n    }\n  }, [router.events])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Component {...pageProps} />\n      <GlobalStyle />\n      {new routes().Router.router?.asPath !== '/login' && <Header />}\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}