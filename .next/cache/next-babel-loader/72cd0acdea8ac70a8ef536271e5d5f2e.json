{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Container, Row, Column } from './styles';\nimport { maskMoney } from '../../components/MaksMoney';\nimport List from './components/List';\n\nvar FormCalc = function FormCalc() {\n  _s();\n\n  var _useState = useState([]),\n      lista = _useState[0],\n      setLista = _useState[1];\n\n  var _useState2 = useState('R$ 0,00'),\n      aporteMensal = _useState2[0],\n      setAporteMensal = _useState2[1];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues;\n\n  var onSubmit = function onSubmit(data) {\n    var redimentoMensal = parseFloat(Math.pow(1 + parseFloat(data.rendimentoAnual) / 100, 1 / 12) - 1);\n    var listaTemp = [];\n\n    for (var i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: parseFloat(aporteMensal.toString().replace('.', '').replace(',', '.'))\n        });\n      } else {\n        var _aporteMensal = parseFloat(data.aporteMensal.toString().replace('.', '').replace(',', '.'));\n\n        var rendimentoAtual = parseFloat(listaTemp[i - 1].aporteFinal * redimentoMensal);\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: rendimentoAtual,\n          aporteFinal: _aporteMensal + listaTemp[i - 1].aporteFinal + rendimentoAtual\n        });\n      }\n    }\n\n    setLista(listaTemp);\n  };\n\n  function calcAporteMensal() {\n    var salarioMensal = parseFloat(getValues('salarioMensal').toString().replace('.', '').replace(',', '.'));\n    var percentualAporte = parseInt(getValues('percentualAporte')) / 100;\n    var aporteMensal = parseFloat(percentualAporte * salarioMensal);\n\n    if (aporteMensal) {\n      setAporteMensal(maskMoney((aporteMensal * 100).toString()));\n      var rendaRestante = (salarioMensal - aporteMensal) * 100;\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()));\n    } else {\n      setAporteMensal(maskMoney('000'));\n      setValue('rendaRestante', maskMoney('000'));\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value));\n    calcAporteMensal();\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined);\n    setValue('percentualAporte', undefined);\n    setValue('aporteMensal', undefined);\n    setValue('rendaRestante', undefined);\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Sal\\xE1rio Mensal\"), __jsx(\"input\", {\n    placeholder: \"R$ 0,00\",\n    className: errors.salarioMensal && 'inpt-error',\n    type: \"text\",\n    name: \"salarioMensal\",\n    onChange: onChangeRemunaration,\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Percentual de Aporte\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.percentualAporte && 'inpt-error',\n    type: \"text\",\n    name: \"percentualAporte\",\n    onChange: calcAporteMensal,\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Aporte Mensal\"), __jsx(\"h1\", {\n    style: {\n      color: '#FFF'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, setAporteMensal)), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Rendimento Anual\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.rendimentoAnual && 'inpt-error',\n    type: \"text\",\n    name: \"rendimentoAnual\",\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Calcular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Limpar\",\n    onClick: onChangeLimpar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), __jsx(List, {\n    lista: lista,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(FormCalc, \"8c6gQ+PlIFAErHR6LKSE+Tl8V4s=\", false, function () {\n  return [useForm];\n});\n\n_c = FormCalc;\nexport default FormCalc;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCalc\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx"],"names":["React","useState","useForm","Container","Row","Column","maskMoney","List","FormCalc","lista","setLista","aporteMensal","setAporteMensal","control","handleSubmit","register","setValue","errors","getValues","onSubmit","data","redimentoMensal","parseFloat","rendimentoAnual","listaTemp","i","push","valorInicial","aporteFinal","toString","replace","rendimentoAtual","rendimento","calcAporteMensal","salarioMensal","percentualAporte","parseInt","rendaRestante","onChangeRemunaration","e","target","value","onChangeLimpar","undefined","required","maxLength","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Container, Row, Column } from './styles'\nimport { maskMoney } from '../../components/MaksMoney'\nimport List from './components/List'\nimport { IStateLista, IFormInput } from '../types'\n\nconst FormCalc: React.FC = () => {\n  const [lista, setLista] = useState<IStateLista[]>([])\n  const [aporteMensal, setAporteMensal] = useState('R$ 0,00')\n  const {\n    control,\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues\n  } = useForm<IFormInput>()\n\n  const onSubmit = (data: IFormInput) => {\n    const redimentoMensal = parseFloat(\n      (1 + parseFloat(data.rendimentoAnual) / 100) ** (1 / 12) - 1\n    )\n    const listaTemp = []\n    for (let i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: parseFloat(\n            aporteMensal.toString().replace('.', '').replace(',', '.')\n          )\n        })\n      } else {\n        const aporteMensal = parseFloat(\n          data.aporteMensal.toString().replace('.', '').replace(',', '.')\n        )\n        const rendimentoAtual = parseFloat(\n          listaTemp[i - 1].aporteFinal * redimentoMensal\n        )\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: rendimentoAtual,\n          aporteFinal:\n            aporteMensal + listaTemp[i - 1].aporteFinal + rendimentoAtual\n        })\n      }\n    }\n    setLista(listaTemp)\n  }\n\n  function calcAporteMensal() {\n    const salarioMensal = parseFloat(\n      getValues('salarioMensal').toString().replace('.', '').replace(',', '.')\n    )\n    const percentualAporte = parseInt(getValues('percentualAporte')) / 100\n    const aporteMensal = parseFloat(percentualAporte * salarioMensal)\n\n    if (aporteMensal) {\n      setAporteMensal(maskMoney((aporteMensal * 100).toString()))\n      const rendaRestante = (salarioMensal - aporteMensal) * 100\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()))\n    } else {\n      setAporteMensal(maskMoney('000'))\n      setValue('rendaRestante', maskMoney('000'))\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value))\n    calcAporteMensal()\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined)\n    setValue('percentualAporte', undefined)\n    setValue('aporteMensal', undefined)\n    setValue('rendaRestante', undefined)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container>\n        <Row>\n          <Column>\n            <label>Salário Mensal</label>\n            <input\n              placeholder=\"R$ 0,00\"\n              className={errors.salarioMensal && 'inpt-error'}\n              type=\"text\"\n              name=\"salarioMensal\"\n              onChange={onChangeRemunaration}\n              ref={register({ required: true })}\n            />\n          </Column>\n          <Column>\n            <label>Percentual de Aporte</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.percentualAporte && 'inpt-error'}\n              type=\"text\"\n              name=\"percentualAporte\"\n              onChange={calcAporteMensal}\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column>\n            <label>Aporte Mensal</label>\n            <h1 style={{ color: '#FFF' }}>{setAporteMensal}</h1>\n          </Column>\n          <Column>\n            <label>Rendimento Anual</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.rendimentoAnual && 'inpt-error'}\n              type=\"text\"\n              name=\"rendimentoAnual\"\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n        </Row>\n        <input type=\"submit\" value=\"Calcular\" />\n        <input type=\"button\" value=\"Limpar\" onClick={onChangeLimpar} />\n      </Container>\n      <List lista={lista} />\n    </form>\n  )\n}\n\nexport default FormCalc\n"]},"metadata":{},"sourceType":"module"}