{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/components/List/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Lottie from 'react-lottie';\nimport loadginCash from '../../../../assets/loadingCash.json';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Container } from './styles';\nvar columns = [{\n  id: 'mes',\n  label: 'MÃªs',\n  minWidth: 20\n}, {\n  id: 'redimento',\n  label: 'Rendimento (R$)',\n  minWidth: 100\n}, {\n  id: 'valorInicial',\n  label: 'Valor Inicial (R$)',\n  minWidth: 170,\n  align: 'left',\n  format: function format(value) {\n    return value.toLocaleString('pt-Br');\n  }\n}, {\n  id: 'aporteFinal',\n  label: 'Aporte Final',\n  minWidth: 170,\n  align: 'left',\n  format: function format(value) {\n    return value.toLocaleString('pt-Br');\n  }\n}];\n\nvar List = function List(props) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadginCash,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, props.loading && __jsx(Lottie, {\n    options: defaultOptions,\n    isStopped: false,\n    isPaused: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), props.lista.length > 0 && __jsx(Paper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, props.lista.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, idx) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, __jsx(TableCell, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, idx + 1), __jsx(TableCell, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, row.rendimento.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })), __jsx(TableCell, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, row.valorInicial.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })), __jsx(TableCell, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, row.aporteFinal.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    })));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: 360,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(List, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/components/List/index.tsx"],"names":["React","Lottie","loadginCash","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Container","columns","id","label","minWidth","align","format","value","toLocaleString","List","props","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","loading","lista","length","map","column","slice","row","idx","rendimento","style","currency","valorInicial","aporteFinal"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAUA,IAAMC,OAAiB,GAAG,CACxB;AAAEC,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,KAAK,EAAE,KAApB;AAA2BC,EAAAA,QAAQ,EAAE;AAArC,CADwB,EAExB;AAAEF,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,KAAK,EAAE,iBAA1B;AAA6CC,EAAAA,QAAQ,EAAE;AAAvD,CAFwB,EAGxB;AACEF,EAAAA,EAAE,EAAE,cADN;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE,MAJT;AAKEC,EAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,WAAmBA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAAnB;AAAA;AALV,CAHwB,EAUxB;AACEN,EAAAA,EAAE,EAAE,aADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE,MAJT;AAKEC,EAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,WAAmBA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAAnB;AAAA;AALV,CAVwB,CAA1B;;AAmBA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,CAAAC,KAAK,EAAI;AAAA;;AAAA,wBACNrB,KAAK,CAACsB,QAAN,CAAe,CAAf,CADM;AAAA;AAAA,MACvBC,IADuB;AAAA,MACjBC,OADiB;;AAAA,yBAEQxB,KAAK,CAACsB,QAAN,CAAe,EAAf,CAFR;AAAA;AAAA,MAEvBG,WAFuB;AAAA,MAEVC,cAFU;;AAI9B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAiBC,OAAjB,EAAqC;AAC5DL,IAAAA,OAAO,CAACK,OAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BF,KAD8B,EAE3B;AACHF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAab,KAAf,CAAd;AACAM,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GALD;;AAOA,MAAMQ,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,IADe;AAErBC,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,aAAa,EAAEjC,WAHM;AAIrBkC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,mBAAmB,EAAE;AADL;AAJG,GAAvB;AAQA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACiB,OAAN,IACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,cAAjB;AAAiC,IAAA,SAAS,EAAE,KAA5C;AAAmD,IAAA,QAAQ,EAAE,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIGX,KAAK,CAACkB,KAAN,CAAYC,MAAZ,GAAqB,CAArB,IACC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,kBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,OAAO,CAAC6B,GAAR,CAAY,UAAAC,MAAM;AAAA,WACjB,MAAC,SAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAAC7B,EADd;AAEE,MAAA,KAAK,EAAE6B,MAAM,CAAC1B,KAFhB;AAGE,MAAA,KAAK,EAAE;AAAED,QAAAA,QAAQ,EAAE2B,MAAM,CAAC3B;AAAnB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG2B,MAAM,CAAC5B,KALV,CADiB;AAAA,GAAlB,CADH,CADF,CADF,EAcE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,KAAK,CAACkB,KAAN,CACEI,KADF,CACQpB,IAAI,GAAGE,WADf,EAC4BF,IAAI,GAAGE,WAAP,GAAqBA,WADjD,EAEEgB,GAFF,CAEM,UAACG,GAAD,EAAMC,GAAN,EAAc;AACjB,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,QAAQ,EAAE,CAAC,CAA3C;AAA8C,MAAA,GAAG,EAAEA,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,GAAG,GAAG,CAA5B,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACE,UAAJ,CAAe3B,cAAf,CAA8B,OAA9B,EAAuC;AACtC4B,MAAAA,KAAK,EAAE,UAD+B;AAEtCC,MAAAA,QAAQ,EAAE;AAF4B,KAAvC,CADH,CAFF,EAQE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEH,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACK,YAAJ,CAAiB9B,cAAjB,CAAgC,OAAhC,EAAyC;AACxC4B,MAAAA,KAAK,EAAE,UADiC;AAExCC,MAAAA,QAAQ,EAAE;AAF8B,KAAzC,CADH,CARF,EAcE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEH,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACM,WAAJ,CAAgB/B,cAAhB,CAA+B,OAA/B,EAAwC;AACvC4B,MAAAA,KAAK,EAAE,UADgC;AAEvCC,MAAAA,QAAQ,EAAE;AAF6B,KAAxC,CADH,CAdF,CADF;AAuBD,GA1BF,CADH,CAdF,CADF,CADF,EA+CE,MAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,WAAW,EAAEvB,WAJf;AAKE,IAAA,IAAI,EAAEF,IALR;AAME,IAAA,YAAY,EAAEI,gBANhB;AAOE,IAAA,mBAAmB,EAAEG,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,CALJ,CADF;AAkED,CAzFD;;GAAMV,I;;KAAAA,I;AA2FN,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\nimport Lottie from 'react-lottie'\nimport loadginCash from '../../../../assets/loadingCash.json'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport { Container } from './styles'\n\ninterface Column {\n  id: 'mes' | 'rendimento' | 'valorInicial' | 'aporteFinal'\n  label: string\n  minWidth?: number\n  align?: 'right'\n  format?: (value: number) => string\n}\n\nconst columns: Column[] = [\n  { id: 'mes', label: 'MÃªs', minWidth: 20 },\n  { id: 'redimento', label: 'Rendimento (R$)', minWidth: 100 },\n  {\n    id: 'valorInicial',\n    label: 'Valor Inicial (R$)',\n    minWidth: 170,\n    align: 'left',\n    format: (value: number) => value.toLocaleString('pt-Br')\n  },\n  {\n    id: 'aporteFinal',\n    label: 'Aporte Final',\n    minWidth: 170,\n    align: 'left',\n    format: (value: number) => value.toLocaleString('pt-Br')\n  }\n]\n\nconst List: React.FC = props => {\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadginCash,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n  return (\n    <Container>\n      {props.loading && (\n        <Lottie options={defaultOptions} isStopped={false} isPaused={false} />\n      )}\n      {props.lista.length > 0 && (\n        <Paper>\n          <TableContainer>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.lista\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, idx) => {\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={idx}>\n                        <TableCell key={idx}>{idx + 1}</TableCell>\n                        <TableCell key={idx}>\n                          {row.rendimento.toLocaleString('pt-br', {\n                            style: 'currency',\n                            currency: 'BRL'\n                          })}\n                        </TableCell>\n                        <TableCell key={idx}>\n                          {row.valorInicial.toLocaleString('pt-br', {\n                            style: 'currency',\n                            currency: 'BRL'\n                          })}\n                        </TableCell>\n                        <TableCell key={idx}>\n                          {row.aporteFinal.toLocaleString('pt-br', {\n                            style: 'currency',\n                            currency: 'BRL'\n                          })}\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={360}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      )}\n    </Container>\n  )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}