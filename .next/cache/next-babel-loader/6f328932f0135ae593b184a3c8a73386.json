{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/lib/auth.tsx\",\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport firebase from './firebase';\nimport { createUser } from './db';\nvar authContext = createContext({\n  auth: null,\n  loading: true,\n  signInWithGoogle: function () {\n    var _signInWithGoogle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signInWithGoogle() {\n      return _signInWithGoogle.apply(this, arguments);\n    }\n\n    return signInWithGoogle;\n  }(),\n  signInWithFacebook: function () {\n    var _signInWithFacebook = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signInWithFacebook() {\n      return _signInWithFacebook.apply(this, arguments);\n    }\n\n    return signInWithFacebook;\n  }(),\n  signInWithEmailPassword: function signInWithEmailPassword() {},\n  signOut: function () {\n    var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function signOut() {\n      return _signOut.apply(this, arguments);\n    }\n\n    return signOut;\n  }()\n});\n\nvar formatAuthState = function formatAuthState(user) {\n  return {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    photoUrl: user.photoURL,\n    token: null\n  };\n};\n\nfunction useProvideAuth() {\n  _s();\n\n  var _useState = useState(null),\n      auth = _useState[0],\n      setAuth = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n  /**\n   * Callback function used for firebase.auth.onAuthStateChanged().\n   * Takes the user object returned and formats it for my state.\n   * We fetch the idToken and append it to my auth state and store it.\n   */\n\n\n  var handleAuthChange = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(authState) {\n      var formattedAuth;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (authState) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 2:\n              // Formats response into my required state.\n              formattedAuth = formatAuthState(authState); // Fetch firebase auth ID Token.\n\n              _context4.next = 5;\n              return authState.getIdToken();\n\n            case 5:\n              formattedAuth.token = _context4.sent;\n              // Stores auth into state.\n              setAuth(formattedAuth); // Sets loading state to false.\n\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleAuthChange(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * Callback function used for response from firebase OAuth.\n   * Store user object returned in firestore.\n   * @param firebase User Credential\n   */\n\n\n  var signedIn = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(response) {\n      var authedUser;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (response.user) {\n                _context5.next = 2;\n                break;\n              }\n\n              throw new Error('No User');\n\n            case 2:\n              // Format user into my required state.\n              authedUser = formatAuthState(response.user); // firestore database function\n\n              createUser(authedUser.uid, authedUser);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function signedIn(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * Callback for when firebase signOut.\n   * Sets auth state to null and loading to true.\n   */\n\n\n  var clear = function clear() {\n    setAuth(null);\n    setLoading(true);\n  };\n  /**\n   * Triggers firebase Oauth for Google and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  var signInWithGoogle = function signInWithGoogle() {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(signedIn);\n  };\n  /**\n   * Triggers firebase Oauth for E-mail and Password and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  var signInWithEmailPassword = function signInWithEmailPassword(email, password) {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(signedIn);\n  };\n  /**\n   * Triggers firebase Oauth for facebook and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  var signInWithFacebook = function signInWithFacebook() {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(signedIn);\n  };\n  /**\n   * Create user with E-mail and Password.\n   * sets loading to true.\n   */\n\n\n  var createWithEmailAndPassword = function createWithEmailAndPassword(email, password) {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(signedIn);\n  };\n  /**\n   * Calls firebase signOut and with clear callback to reset state.\n   */\n\n\n  var signOut = function signOut() {\n    return firebase.auth().signOut().then(clear);\n  };\n  /**\n   * Watches for state change for firebase auth and calls the handleAuthChange callback\n   * on every change.\n   */\n\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onAuthStateChanged(handleAuthChange);\n    return function () {\n      return unsubscribe();\n    };\n  }, []); // returns state values and callbacks for signIn and signOut.\n\n  return {\n    auth: auth,\n    loading: loading,\n    signInWithGoogle: signInWithGoogle,\n    signInWithFacebook: signInWithFacebook,\n    signInWithEmailPassword: signInWithEmailPassword,\n    signOut: signOut\n  };\n}\n\n_s(useProvideAuth, \"1M3j6YOcUIG6FlGAoQ0D+5QxHCI=\");\n\nexport function AuthProvider(_ref3) {\n  _s2();\n\n  var children = _ref3.children;\n  var auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 10\n    }\n  }, children);\n}\n\n_s2(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s3();\n\n  return useContext(authContext);\n};\n\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/lib/auth.tsx"],"names":["createContext","useContext","useState","useEffect","firebase","createUser","authContext","auth","loading","signInWithGoogle","signInWithFacebook","signInWithEmailPassword","signOut","formatAuthState","user","uid","email","name","displayName","photoUrl","photoURL","token","useProvideAuth","setAuth","setLoading","handleAuthChange","authState","formattedAuth","getIdToken","signedIn","response","Error","authedUser","clear","signInWithPopup","GoogleAuthProvider","then","password","signInWithEmailAndPassword","FacebookAuthProvider","createWithEmailAndPassword","createUserWithEmailAndPassword","unsubscribe","onAuthStateChanged","AuthProvider","children","useAuth"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAT,EAAiCC,UAAjC,EAA6CC,QAA7C,EAAuDC,SAAvD,QAAwE,OAAxE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAmBA,IAAMC,WAAiC,GAAGN,aAAa,CAAc;AACnEO,EAAAA,IAAI,EAAE,IAD6D;AAEnEC,EAAAA,OAAO,EAAE,IAF0D;AAGnEC,EAAAA,gBAAgB;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAHmD;AAInEC,EAAAA,kBAAkB;AAAA,uFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAJiD;AAKnEC,EAAAA,uBAAuB,EAAE,mCAAM,CAAE,CALkC;AAMnEC,EAAAA,OAAO;AAAA,4EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAN4D,CAAd,CAAvD;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAAgC;AACtDC,IAAAA,GAAG,EAAED,IAAI,CAACC,GAD4C;AAEtDC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAF0C;AAGtDC,IAAAA,IAAI,EAAEH,IAAI,CAACI,WAH2C;AAItDC,IAAAA,QAAQ,EAAEL,IAAI,CAACM,QAJuC;AAKtDC,IAAAA,KAAK,EAAE;AAL+C,GAAhC;AAAA,CAAxB;;AAQA,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACApB,QAAQ,CAAc,IAAd,CADR;AAAA,MACjBK,IADiB;AAAA,MACXgB,OADW;;AAAA,mBAEMrB,QAAQ,CAAU,IAAV,CAFd;AAAA,MAEjBM,OAFiB;AAAA,MAERgB,UAFQ;AAIxB;;;;;;;AAKA,MAAMC,gBAAgB;AAAA,wEAAG,kBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClBA,SADkB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKvB;AACMC,cAAAA,aANiB,GAMDd,eAAe,CAACa,SAAD,CANd,EAOvB;;AAPuB;AAAA,qBAQKA,SAAS,CAACE,UAAV,EARL;;AAAA;AAQvBD,cAAAA,aAAa,CAACN,KARS;AASvB;AACAE,cAAAA,OAAO,CAACI,aAAD,CAAP,CAVuB,CAWvB;;AACAH,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAZuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBC,gBAAgB;AAAA;AAAA;AAAA,KAAtB;AAeA;;;;;;;AAKA,MAAMI,QAAQ;AAAA,yEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVA,QAAQ,CAAChB,IADC;AAAA;AAAA;AAAA;;AAAA,oBAEP,IAAIiB,KAAJ,CAAU,SAAV,CAFO;;AAAA;AAKf;AACMC,cAAAA,UANS,GAMInB,eAAe,CAACiB,QAAQ,CAAChB,IAAV,CANnB,EAOf;;AACAT,cAAAA,UAAU,CAAC2B,UAAU,CAACjB,GAAZ,EAA2BiB,UAA3B,CAAV;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARH,QAAQ;AAAA;AAAA;AAAA,KAAd;AAWA;;;;;;AAIA,MAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;AAKA;;;;;;AAIA,MAAMf,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7Be,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOpB,QAAQ,CACZG,IADI,GAEJ2B,eAFI,CAEY,IAAI9B,QAAQ,CAACG,IAAT,CAAc4B,kBAAlB,EAFZ,EAGJC,IAHI,CAGCP,QAHD,CAAP;AAID,GAND;AAQA;;;;;;AAIA,MAAMlB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACK,KAAD,EAAQqB,QAAR,EAAqB;AACnDb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOpB,QAAQ,CACZG,IADI,GAEJ+B,0BAFI,CAEuBtB,KAFvB,EAE8BqB,QAF9B,EAGJD,IAHI,CAGCP,QAHD,CAAP;AAID,GAND;AAQA;;;;;;AAIA,MAAMnB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/Bc,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOpB,QAAQ,CACZG,IADI,GAEJ2B,eAFI,CAEY,IAAI9B,QAAQ,CAACG,IAAT,CAAcgC,oBAAlB,EAFZ,EAGJH,IAHI,CAGCP,QAHD,CAAP;AAID,GAND;AAQA;;;;;;AAIA,MAAMW,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACxB,KAAD,EAAQqB,QAAR,EAAqB;AACtDb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOpB,QAAQ,CACZG,IADI,GAEJkC,8BAFI,CAE2BzB,KAF3B,EAEkCqB,QAFlC,EAGJD,IAHI,CAGCP,QAHD,CAAP;AAID,GAND;AAQA;;;;;AAGA,MAAMjB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,WAAOR,QAAQ,CAACG,IAAT,GAAgBK,OAAhB,GAA0BwB,IAA1B,CAA+BH,KAA/B,CAAP;AACD,GAFD;AAIA;;;;;;AAIA9B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMuC,WAAW,GAAGtC,QAAQ,CAACG,IAAT,GAAgBoC,kBAAhB,CAAmClB,gBAAnC,CAApB;AACA,WAAO;AAAA,aAAMiB,WAAW,EAAjB;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT,CA5GwB,CAiHxB;;AACA,SAAO;AACLnC,IAAAA,IAAI,EAAJA,IADK;AAELC,IAAAA,OAAO,EAAPA,OAFK;AAGLC,IAAAA,gBAAgB,EAAhBA,gBAHK;AAILC,IAAAA,kBAAkB,EAAlBA,kBAJK;AAKLC,IAAAA,uBAAuB,EAAvBA,uBALK;AAMLC,IAAAA,OAAO,EAAPA;AANK,GAAP;AAQD;;GA1HQU,c;;AA4HT,OAAO,SAASsB,YAAT,QAAyC;AAAA;;AAAA,MAAjBC,QAAiB,SAAjBA,QAAiB;AAC9C,MAAMtC,IAAI,GAAGe,cAAc,EAA3B;AACA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEf,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCsC,QAApC,CAAP;AACD;;IAHeD,Y;UACDtB,c;;;KADCsB,Y;AAKhB,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,SAAM7C,UAAU,CAACK,WAAD,CAAhB;AAAA,CAAhB;;IAAMwC,O","sourcesContent":["import { createContext, Context, useContext, useState, useEffect } from 'react'\nimport firebase from './firebase'\nimport { createUser } from './db'\n\ninterface Auth {\n  uid: string\n  email: string | null\n  name: string | null\n  photoUrl: string | null\n  token: string | null\n}\n\ninterface AuthContext {\n  auth: Auth | null\n  loading: boolean\n  signInWithGoogle: () => Promise<void>\n  signInWithFacebook: () => Promise<void>\n  signInWithEmailPassword: () => Promise<void>\n  signOut: () => Promise<void>\n}\n\nconst authContext: Context<AuthContext> = createContext<AuthContext>({\n  auth: null,\n  loading: true,\n  signInWithGoogle: async () => {},\n  signInWithFacebook: async () => {},\n  signInWithEmailPassword: () => {},\n  signOut: async () => {}\n})\n\nconst formatAuthState = (user: firebase.User): Auth => ({\n  uid: user.uid,\n  email: user.email,\n  name: user.displayName,\n  photoUrl: user.photoURL,\n  token: null\n})\n\nfunction useProvideAuth() {\n  const [auth, setAuth] = useState<Auth | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  /**\n   * Callback function used for firebase.auth.onAuthStateChanged().\n   * Takes the user object returned and formats it for my state.\n   * We fetch the idToken and append it to my auth state and store it.\n   */\n  const handleAuthChange = async (authState: firebase.User | null) => {\n    if (!authState) {\n      return\n    }\n\n    // Formats response into my required state.\n    const formattedAuth = formatAuthState(authState)\n    // Fetch firebase auth ID Token.\n    formattedAuth.token = await authState.getIdToken()\n    // Stores auth into state.\n    setAuth(formattedAuth)\n    // Sets loading state to false.\n    setLoading(false)\n  }\n\n  /**\n   * Callback function used for response from firebase OAuth.\n   * Store user object returned in firestore.\n   * @param firebase User Credential\n   */\n  const signedIn = async (response: firebase.auth.UserCredential) => {\n    if (!response.user) {\n      throw new Error('No User')\n    }\n\n    // Format user into my required state.\n    const authedUser = formatAuthState(response.user)\n    // firestore database function\n    createUser(authedUser.uid as string, authedUser)\n  }\n\n  /**\n   * Callback for when firebase signOut.\n   * Sets auth state to null and loading to true.\n   */\n  const clear = () => {\n    setAuth(null)\n    setLoading(true)\n  }\n\n  /**\n   * Triggers firebase Oauth for Google and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithGoogle = () => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then(signedIn)\n  }\n\n  /**\n   * Triggers firebase Oauth for E-mail and Password and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithEmailPassword = (email, password) => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(signedIn)\n  }\n\n  /**\n   * Triggers firebase Oauth for facebook and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithFacebook = () => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then(signedIn)\n  }\n\n  /**\n   * Create user with E-mail and Password.\n   * sets loading to true.\n   */\n  const createWithEmailAndPassword = (email, password) => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(signedIn)\n  }\n\n  /**\n   * Calls firebase signOut and with clear callback to reset state.\n   */\n  const signOut = () => {\n    return firebase.auth().signOut().then(clear)\n  }\n\n  /**\n   * Watches for state change for firebase auth and calls the handleAuthChange callback\n   * on every change.\n   */\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(handleAuthChange)\n    return () => unsubscribe()\n  }, [])\n\n  // returns state values and callbacks for signIn and signOut.\n  return {\n    auth,\n    loading,\n    signInWithGoogle,\n    signInWithFacebook,\n    signInWithEmailPassword,\n    signOut\n  }\n}\n\nexport function AuthProvider({ children }: any) {\n  const auth = useProvideAuth()\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport const useAuth = () => useContext(authContext)\n"]},"metadata":{},"sourceType":"module"}