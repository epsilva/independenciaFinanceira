{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Container, Row, Column } from './styles';\nimport { maskMoney } from '../../components/MaksMoney';\n\nvar FormCalc = function FormCalc() {\n  _s();\n\n  var _useState = useState([]),\n      lista = _useState[0],\n      setLista = _useState[1];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues;\n\n  var onSubmit = function onSubmit(data) {\n    var redimentoMensal = parseFloat(Math.pow(1 + parseFloat(data.rendimentoAnual) / 100, 1 / 12) - 1);\n    console.log(redimentoMensal);\n    var listaTemp = [];\n\n    for (var i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: data.aporteMensal\n        });\n      } else {\n        var aporteFinal = parseFloat(listaTemp[i - 1].aporteFinal.toString().replace('.', '').replace(',', '.'));\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: aporteFinal * redimentoMensal * 100,\n          aporteFinal: parseFloat(data.aporteMensal) + aporteFinal + redimentoMensal\n        });\n      }\n    }\n\n    console.log(listaTemp);\n  };\n\n  function calcAporteMensal() {\n    var salarioMensal = parseFloat(getValues('salarioMensal').toString().replace('.', '').replace(',', '.'));\n    var percentualAporte = parseInt(getValues('percentualAporte')) / 100;\n    var aporteMensal = parseFloat(percentualAporte * salarioMensal);\n\n    if (aporteMensal) {\n      setValue('aporteMensal', maskMoney((aporteMensal * 100).toString()));\n      var rendaRestante = (salarioMensal - aporteMensal) * 100;\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()));\n    } else {\n      setValue('aporteMensal', maskMoney('000'));\n      setValue('rendaRestante', maskMoney('000'));\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value));\n    calcAporteMensal();\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined);\n    setValue('percentualAporte', undefined);\n    setValue('aporteMensal', undefined);\n    setValue('rendaRestante', undefined);\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Sal\\xE1rio Mensal\"), __jsx(\"input\", {\n    placeholder: \"R$ 0,00\",\n    className: errors.salarioMensal && 'inpt-error',\n    type: \"text\",\n    name: \"salarioMensal\",\n    onChange: onChangeRemunaration,\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Percentual de Aporte\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.percentualAporte && 'inpt-error',\n    type: \"text\",\n    name: \"percentualAporte\",\n    onChange: calcAporteMensal,\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Rendomento Anual\"), __jsx(\"input\", {\n    placeholder: \"100%\",\n    maxLength: 3,\n    className: errors.rendimentoAnual && 'inpt-error',\n    type: \"text\",\n    name: \"rendimentoAnual\",\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Aporte Mensal\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"aporteMensal\",\n    ref: register(),\n    placeholder: \"R$ 0,00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Renda Restante\"), __jsx(\"input\", {\n    placeholder: \"R$ 0,00\",\n    type: \"text\",\n    name: \"rendaRestante\",\n    ref: register(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Calcular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Limpar\",\n    onClick: onChangeLimpar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(FormCalc, \"t2adw0LPsTXWYzXbrLxNZQNmS0g=\", false, function () {\n  return [useForm];\n});\n\n_c = FormCalc;\nexport default FormCalc;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCalc\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalc/index.tsx"],"names":["React","useState","useForm","Container","Row","Column","maskMoney","FormCalc","lista","setLista","control","handleSubmit","register","setValue","errors","getValues","onSubmit","data","redimentoMensal","parseFloat","rendimentoAnual","console","log","listaTemp","i","push","valorInicial","aporteFinal","aporteMensal","toString","replace","rendimento","calcAporteMensal","salarioMensal","percentualAporte","parseInt","rendaRestante","onChangeRemunaration","e","target","value","onChangeLimpar","undefined","required","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Container, Row, Column } from './styles'\nimport { maskMoney } from '../../components/MaksMoney'\n\ninterface IFormInput {\n  salarioMensal: number\n  percentualAporte: number\n  aporteMensal: number\n  rendaRestante: number\n  rendimentoAnual: number\n}\n\nconst FormCalc: React.FC = () => {\n  const [lista, setLista] = useState([])\n  const {\n    control,\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues\n  } = useForm<IFormInput>()\n\n  const onSubmit = (data: IFormInput) => {\n    const redimentoMensal = parseFloat(\n      (1 + parseFloat(data.rendimentoAnual) / 100) ** (1 / 12) - 1\n    )\n    console.log(redimentoMensal)\n    const listaTemp = []\n    for (let i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          valorInicial: '000',\n          aporteFinal: data.aporteMensal\n        })\n      } else {\n        const aporteFinal = parseFloat(\n          listaTemp[i - 1].aporteFinal\n            .toString()\n            .replace('.', '')\n            .replace(',', '.')\n        )\n        listaTemp.push({\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: aporteFinal * redimentoMensal * 100,\n          aporteFinal:\n            parseFloat(data.aporteMensal) + aporteFinal + redimentoMensal\n        })\n      }\n    }\n    console.log(listaTemp)\n  }\n\n  function calcAporteMensal() {\n    const salarioMensal = parseFloat(\n      getValues('salarioMensal').toString().replace('.', '').replace(',', '.')\n    )\n    const percentualAporte = parseInt(getValues('percentualAporte')) / 100\n    const aporteMensal = parseFloat(percentualAporte * salarioMensal)\n\n    if (aporteMensal) {\n      setValue('aporteMensal', maskMoney((aporteMensal * 100).toString()))\n      const rendaRestante = (salarioMensal - aporteMensal) * 100\n      setValue('rendaRestante', maskMoney(rendaRestante.toString()))\n    } else {\n      setValue('aporteMensal', maskMoney('000'))\n      setValue('rendaRestante', maskMoney('000'))\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value))\n    calcAporteMensal()\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined)\n    setValue('percentualAporte', undefined)\n    setValue('aporteMensal', undefined)\n    setValue('rendaRestante', undefined)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container>\n        <Row>\n          <Column>\n            <label>Salário Mensal</label>\n            <input\n              placeholder=\"R$ 0,00\"\n              className={errors.salarioMensal && 'inpt-error'}\n              type=\"text\"\n              name=\"salarioMensal\"\n              onChange={onChangeRemunaration}\n              ref={register({ required: true })}\n            />\n          </Column>\n          <Column>\n            <label>Percentual de Aporte</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.percentualAporte && 'inpt-error'}\n              type=\"text\"\n              name=\"percentualAporte\"\n              onChange={calcAporteMensal}\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n          <Column>\n            <label>Rendomento Anual</label>\n            <input\n              placeholder=\"100%\"\n              maxLength={3}\n              className={errors.rendimentoAnual && 'inpt-error'}\n              type=\"text\"\n              name=\"rendimentoAnual\"\n              ref={register({ required: true, maxLength: 3 })}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column>\n            <label>Aporte Mensal</label>\n            <input\n              type=\"text\"\n              name=\"aporteMensal\"\n              ref={register()}\n              placeholder=\"R$ 0,00\"\n            />\n          </Column>\n          <Column>\n            <label>Renda Restante</label>\n            <input\n              placeholder=\"R$ 0,00\"\n              type=\"text\"\n              name=\"rendaRestante\"\n              ref={register()}\n            />\n          </Column>\n        </Row>\n        <input type=\"submit\" value=\"Calcular\" />\n        <input type=\"button\" value=\"Limpar\" onClick={onChangeLimpar} />\n      </Container>\n    </form>\n  )\n}\n\nexport default FormCalc\n"]},"metadata":{},"sourceType":"module"}