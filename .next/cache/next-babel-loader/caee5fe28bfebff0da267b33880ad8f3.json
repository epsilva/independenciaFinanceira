{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/lib/auth.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport firebase from './firebase';\nimport { createUser } from './db';\nconst authContext = createContext({\n  auth: null,\n  loading: true,\n  signInWithGoogle: async () => {},\n  signInWithFacebook: async () => {},\n  signInWithEmailPassword: () => {},\n  signOut: async () => {}\n});\n\nconst formatAuthState = user => ({\n  uid: user.uid,\n  email: user.email,\n  name: user.displayName,\n  photoUrl: user.photoURL,\n  token: null\n});\n\nfunction useProvideAuth() {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  /**\n   * Callback function used for firebase.auth.onAuthStateChanged().\n   * Takes the user object returned and formats it for my state.\n   * We fetch the idToken and append it to my auth state and store it.\n   */\n\n  const handleAuthChange = async authState => {\n    if (!authState) {\n      return;\n    } // Formats response into my required state.\n\n\n    const formattedAuth = formatAuthState(authState); // Fetch firebase auth ID Token.\n\n    formattedAuth.token = await authState.getIdToken(); // Stores auth into state.\n\n    setAuth(formattedAuth); // Sets loading state to false.\n\n    setLoading(false);\n  };\n  /**\n   * Callback function used for response from firebase OAuth.\n   * Store user object returned in firestore.\n   * @param firebase User Credential\n   */\n\n\n  const signedIn = async response => {\n    if (!response.user) {\n      throw new Error('No User');\n    } // Format user into my required state.\n\n\n    const authedUser = formatAuthState(response.user); // firestore database function\n\n    createUser(authedUser.uid, authedUser);\n  };\n  /**\n   * Callback for when firebase signOut.\n   * Sets auth state to null and loading to true.\n   */\n\n\n  const clear = () => {\n    setAuth(null);\n    setLoading(true);\n  };\n  /**\n   * Triggers firebase Oauth for Google and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(signedIn);\n  };\n  /**\n   * Triggers firebase Oauth for E-mail and Password and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  const signInWithEmailPassword = (email, password) => {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(signedIn);\n  };\n  /**\n   * Triggers firebase Oauth for facebook and calls signIn when successful.\n   * sets loading to true.\n   */\n\n\n  const signInWithFacebook = () => {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(signedIn);\n  };\n  /**\n   * Create user with E-mail and Password.\n   * sets loading to true.\n   */\n\n\n  const createWithEmailAndPassword = (email, password) => {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(signedIn);\n  };\n  /**\n   * Calls firebase signOut and with clear callback to reset state.\n   */\n\n\n  const signOut = () => {\n    return firebase.auth().signOut().then(clear);\n  };\n  /**\n   * Watches for state change for firebase auth and calls the handleAuthChange callback\n   * on every change.\n   */\n\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(handleAuthChange);\n    return () => unsubscribe();\n  }, []); // returns state values and callbacks for signIn and signOut.\n\n  return {\n    auth,\n    loading,\n    signInWithGoogle,\n    signInWithFacebook,\n    signInWithEmailPassword,\n    signOut\n  };\n}\n\nexport function AuthProvider({\n  children\n}) {\n  const auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport const useAuth = () => useContext(authContext);","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/lib/auth.tsx"],"names":["createContext","useContext","useState","useEffect","firebase","createUser","authContext","auth","loading","signInWithGoogle","signInWithFacebook","signInWithEmailPassword","signOut","formatAuthState","user","uid","email","name","displayName","photoUrl","photoURL","token","useProvideAuth","setAuth","setLoading","handleAuthChange","authState","formattedAuth","getIdToken","signedIn","response","Error","authedUser","clear","signInWithPopup","GoogleAuthProvider","then","password","signInWithEmailAndPassword","FacebookAuthProvider","createWithEmailAndPassword","createUserWithEmailAndPassword","unsubscribe","onAuthStateChanged","AuthProvider","children","useAuth"],"mappings":"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","sourcesContent":["import { createContext, Context, useContext, useState, useEffect } from 'react'\nimport firebase from './firebase'\nimport { createUser } from './db'\n\ninterface Auth {\n  uid: string\n  email: string | null\n  name: string | null\n  photoUrl: string | null\n  token: string | null\n}\n\ninterface AuthContext {\n  auth: Auth | null\n  loading: boolean\n  signInWithGoogle: () => Promise<void>\n  signInWithFacebook: () => Promise<void>\n  signInWithEmailPassword: () => Promise<void>\n  signOut: () => Promise<void>\n}\n\nconst authContext: Context<AuthContext> = createContext<AuthContext>({\n  auth: null,\n  loading: true,\n  signInWithGoogle: async () => {},\n  signInWithFacebook: async () => {},\n  signInWithEmailPassword: () => {},\n  signOut: async () => {}\n})\n\nconst formatAuthState = (user: firebase.User): Auth => ({\n  uid: user.uid,\n  email: user.email,\n  name: user.displayName,\n  photoUrl: user.photoURL,\n  token: null\n})\n\nfunction useProvideAuth() {\n  const [auth, setAuth] = useState<Auth | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  /**\n   * Callback function used for firebase.auth.onAuthStateChanged().\n   * Takes the user object returned and formats it for my state.\n   * We fetch the idToken and append it to my auth state and store it.\n   */\n  const handleAuthChange = async (authState: firebase.User | null) => {\n    if (!authState) {\n      return\n    }\n\n    // Formats response into my required state.\n    const formattedAuth = formatAuthState(authState)\n    // Fetch firebase auth ID Token.\n    formattedAuth.token = await authState.getIdToken()\n    // Stores auth into state.\n    setAuth(formattedAuth)\n    // Sets loading state to false.\n    setLoading(false)\n  }\n\n  /**\n   * Callback function used for response from firebase OAuth.\n   * Store user object returned in firestore.\n   * @param firebase User Credential\n   */\n  const signedIn = async (response: firebase.auth.UserCredential) => {\n    if (!response.user) {\n      throw new Error('No User')\n    }\n\n    // Format user into my required state.\n    const authedUser = formatAuthState(response.user)\n    // firestore database function\n    createUser(authedUser.uid as string, authedUser)\n  }\n\n  /**\n   * Callback for when firebase signOut.\n   * Sets auth state to null and loading to true.\n   */\n  const clear = () => {\n    setAuth(null)\n    setLoading(true)\n  }\n\n  /**\n   * Triggers firebase Oauth for Google and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithGoogle = () => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then(signedIn)\n  }\n\n  /**\n   * Triggers firebase Oauth for E-mail and Password and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithEmailPassword = (email, password) => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(signedIn)\n  }\n\n  /**\n   * Triggers firebase Oauth for facebook and calls signIn when successful.\n   * sets loading to true.\n   */\n  const signInWithFacebook = () => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n      .then(signedIn)\n  }\n\n  /**\n   * Create user with E-mail and Password.\n   * sets loading to true.\n   */\n  const createWithEmailAndPassword = (email, password) => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(signedIn)\n  }\n\n  /**\n   * Calls firebase signOut and with clear callback to reset state.\n   */\n  const signOut = () => {\n    return firebase.auth().signOut().then(clear)\n  }\n\n  /**\n   * Watches for state change for firebase auth and calls the handleAuthChange callback\n   * on every change.\n   */\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(handleAuthChange)\n    return () => unsubscribe()\n  }, [])\n\n  // returns state values and callbacks for signIn and signOut.\n  return {\n    auth,\n    loading,\n    signInWithGoogle,\n    signInWithFacebook,\n    signInWithEmailPassword,\n    signOut\n  }\n}\n\nexport function AuthProvider({ children }: any) {\n  const auth = useProvideAuth()\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport const useAuth = () => useContext(authContext)\n"]},"metadata":{},"sourceType":"module"}