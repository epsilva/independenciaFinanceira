{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalcPorSalario/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { Container, Row, Column, HideShow } from './styles';\nimport { maskMoney } from '../MaksMoney';\nimport { maskDecimal } from '../MaskDecimal';\nimport List from './components/List';\nimport Cards from './components/Cards';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport Info from '@material-ui/icons/Info';\nimport LineChart from '../Charts/LineChart';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar FormCalcPorSalario = function FormCalcPorSalario() {\n  _s();\n\n  var _useState = useState([]),\n      lista = _useState[0],\n      setLista = _useState[1];\n\n  var _useState2 = useState('0,00'),\n      aporteMensal = _useState2[0],\n      setAporteMensal = _useState2[1];\n\n  var _useState3 = useState(true),\n      showModal = _useState3[0],\n      setShowModal = _useState3[1];\n\n  var _useState4 = useState(),\n      labels = _useState4[0],\n      setLabels = _useState4[1];\n\n  var _useState5 = useState(),\n      dataSet = _useState5[0],\n      setDataSet = _useState5[1];\n\n  var _useState6 = useState(false),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      salarioMensal: null,\n      percentualAporte: null,\n      rendimentoAnual: null\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues,\n      control = _useForm.control;\n\n  var onSubmit = function onSubmit(data) {\n    var rendimentoAnual = parseFloat(data.rendimentoAnual.toString().replace(',', '.'));\n    var redimentoMensal = Math.pow(1 + rendimentoAnual / 100, 1 / 12) - 1;\n    var listaTemp = [];\n    var ano = 60;\n    var labelsLine = [];\n    var dataLine = [];\n\n    for (var i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          mes: i + 1,\n          rendimento: 0,\n          valorInicial: 0,\n          aporteFinal: parseFloat(aporteMensal.toString().replace('.', '').replace(',', '.'))\n        });\n      } else {\n        var aporteMe = parseFloat(aporteMensal.toString().replace('.', '').replace(',', '.'));\n        var rendimentoAtual = listaTemp[i - 1].aporteFinal * redimentoMensal;\n        listaTemp.push({\n          mes: i + 1,\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: rendimentoAtual,\n          aporteFinal: aporteMe + listaTemp[i - 1].aporteFinal + rendimentoAtual\n        });\n\n        if (ano === i + 1) {\n          labelsLine.push(\"Ano \".concat(ano / 12));\n          var valor = aporteMe + listaTemp[i - 1].aporteFinal + rendimentoAtual;\n          dataLine.push(valor.toFixed(2));\n          ano = ano + 60;\n        }\n      }\n    }\n\n    setDataSet([{\n      label: 'Evolução Patrimônial',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: dataLine\n    }]);\n    setLabels(labelsLine);\n    setLista(listaTemp);\n  };\n\n  function calcAporteMensal(e) {\n    if ((e === null || e === void 0 ? void 0 : e.target.name) === 'percentualAporte') {\n      setValue('percentualAporte', maskDecimal(e === null || e === void 0 ? void 0 : e.target.value));\n    }\n\n    if ((e === null || e === void 0 ? void 0 : e.target.name) === 'rendimentoAnual') {\n      setValue('rendimentoAnual', maskDecimal(e === null || e === void 0 ? void 0 : e.target.value));\n    }\n\n    var salarioMensal = parseFloat(getValues('salarioMensal').toString().replace('.', '').replace(',', '.'));\n    var percentualAporte = parseFloat(getValues('percentualAporte').toString().replace(',', '.')) / 100;\n    var aporteMensal = percentualAporte * salarioMensal;\n\n    if (aporteMensal) {\n      setAporteMensal(maskMoney(Number(aporteMensal).toFixed(2).toString()));\n    } else {\n      setAporteMensal(maskMoney('000'));\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value));\n    calcAporteMensal(undefined);\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined);\n    setValue('percentualAporte', undefined);\n    setValue('rendimentoAnual', undefined);\n    setAporteMensal('0,00');\n    setLista([]);\n  }\n\n  useEffect(function () {\n    onChangeLimpar();\n    setShowModal(localStorage.getItem(window.location.pathname) === null);\n  }, []);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"salarioMensal\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.salarioMensal !== undefined,\n        id: \"standard-basic\",\n        size: \"small\",\n        fullWidth: true,\n        label: __jsx(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }\n        }, \"Sal\\xE1rio Mensal\", ' ', __jsx(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 23\n          }\n        }, __jsx(Tooltip, {\n          title: \"Aqui ser\\xE1 informado a sua renda mensal\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }\n        }, __jsx(Info, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 27\n          }\n        })))),\n        onChange: onChangeRemunaration,\n        placeholder: \"Informe sua renda mensal\",\n        inputRef: register({\n          required: 'Campo obrigatório'\n        }),\n        InputProps: {\n          name: 'salarioMensal',\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 23\n            }\n          }, \"R$\")\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"percentualAporte\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.percentualAporte !== undefined,\n        id: \"standard-basic\",\n        label: __jsx(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }\n        }, \"Percentual do Aporte\", ' ', __jsx(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 23\n          }\n        }, __jsx(Tooltip, {\n          title: \"Aqui ser\\xE1 informado a percentagem do quanto deseja reservar do seu sal\\xE1rio para aplicar mensalmente\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }, __jsx(Info, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }\n        })))),\n        onChange: calcAporteMensal,\n        placeholder: \"Percentual do sal\\xE1rio que deseja investir por m\\xEAs\",\n        size: \"small\",\n        fullWidth: true,\n        inputRef: register({\n          required: 'Campo obrigatório',\n          maxLength: 6\n        }),\n        inputProps: {\n          maxLength: 6,\n          name: 'percentualAporte'\n        },\n        InputProps: {\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 23\n            }\n          }, __jsx(MoneyIcon, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"Aporte Mensal\"), __jsx(\"h2\", {\n    style: {\n      color: '#000'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"R$ \", aporteMensal)), __jsx(Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    name: \"rendimentoAnual\",\n    control: control,\n    render: function render() {\n      return __jsx(TextField, {\n        error: errors.rendimentoAnual !== undefined,\n        id: \"standard-basic\",\n        label: __jsx(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }\n        }, \"Rendimento Anual\", ' ', __jsx(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 23\n          }\n        }, __jsx(Tooltip, {\n          title: \"Aqui ser\\xE1 informado o redimento anual de suas aplica\\xE7\\xF5es\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }\n        }, __jsx(Info, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 27\n          }\n        })))),\n        onChange: calcAporteMensal,\n        placeholder: \"Percentagem do redimento anual de suas aplica\\xE7\\xF5es\",\n        inputRef: register({\n          required: 'Campo obrigatório',\n          maxLength: 6\n        }),\n        size: \"small\",\n        fullWidth: true,\n        inputProps: {\n          maxLength: 6\n        },\n        InputProps: {\n          name: 'rendimentoAnual',\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 23\n            }\n          }, __jsx(TrendingUpIcon, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: '8px'\n    },\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"Calcular\"), __jsx(Button, {\n    type: \"button\",\n    variant: \"contained\",\n    onClick: onChangeLimpar,\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"Limpar\"))), lista.length > 0 && __jsx(React.Fragment, null, __jsx(Cards, {\n    lista: lista,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }), __jsx(LineChart, {\n    labels: labels,\n    dataSet: dataSet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, show ? 'Esconder Detalhes' : 'Exibir Detalhes'), __jsx(HideShow, {\n    show: show,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, __jsx(List, {\n    lista: lista,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }), ' ')));\n};\n\n_s(FormCalcPorSalario, \"Bx2JMoNdAFNg8Te3SMfmlTesVYw=\", false, function () {\n  return [useForm];\n});\n\n_c = FormCalcPorSalario;\nexport default FormCalcPorSalario;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCalcPorSalario\");","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/FormCalcPorSalario/index.tsx"],"names":["React","useEffect","useState","useForm","Controller","Button","Container","Row","Column","HideShow","maskMoney","maskDecimal","List","Cards","TextField","InputAdornment","TrendingUpIcon","MoneyIcon","Info","LineChart","Tooltip","FormCalcPorSalario","lista","setLista","aporteMensal","setAporteMensal","showModal","setShowModal","labels","setLabels","dataSet","setDataSet","show","setShow","defaultValues","salarioMensal","percentualAporte","rendimentoAnual","handleSubmit","register","setValue","errors","getValues","control","onSubmit","data","parseFloat","toString","replace","redimentoMensal","listaTemp","ano","labelsLine","dataLine","i","push","mes","rendimento","valorInicial","aporteFinal","aporteMe","rendimentoAtual","valor","toFixed","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","calcAporteMensal","e","target","name","value","Number","onChangeRemunaration","undefined","onChangeLimpar","localStorage","getItem","window","location","pathname","required","startAdornment","maxLength","color","justifyContent","marginRight","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport Button from '@material-ui/core/Button'\nimport { Container, Row, Column, HideShow } from './styles'\nimport { maskMoney } from '../MaksMoney'\nimport { maskDecimal } from '../MaskDecimal'\nimport List from './components/List'\nimport Cards from './components/Cards'\nimport { IStateLista, IFormInput, IOptionsCharts } from '../types'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\nimport MoneyIcon from '@material-ui/icons/Money'\nimport Info from '@material-ui/icons/Info'\nimport LineChart from '../Charts/LineChart'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst FormCalcPorSalario: React.FC = () => {\n  const [lista, setLista] = useState<IStateLista[]>([])\n  const [aporteMensal, setAporteMensal] = useState('0,00')\n  const [showModal, setShowModal] = useState(true)\n  const [labels, setLabels] = useState<string[]>()\n  const [dataSet, setDataSet] = useState<IOptionsCharts[]>()\n  const [show, setShow] = useState<boolean>(false)\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    errors,\n    getValues,\n    control\n  } = useForm<IFormInput>({\n    defaultValues: {\n      salarioMensal: null,\n      percentualAporte: null,\n      rendimentoAnual: null\n    }\n  })\n\n  const onSubmit = (data: IFormInput) => {\n    const rendimentoAnual = parseFloat(\n      data.rendimentoAnual.toString().replace(',', '.')\n    )\n    const redimentoMensal: number = (1 + rendimentoAnual / 100) ** (1 / 12) - 1\n    const listaTemp: IStateLista[] = []\n    let ano = 60\n    const labelsLine: string[] = []\n    const dataLine: string[] = []\n    for (let i = 0; i < 360; i++) {\n      if (i === 0) {\n        listaTemp.push({\n          mes: i + 1,\n          rendimento: 0,\n          valorInicial: 0,\n          aporteFinal: parseFloat(\n            aporteMensal.toString().replace('.', '').replace(',', '.')\n          )\n        })\n      } else {\n        const aporteMe = parseFloat(\n          aporteMensal.toString().replace('.', '').replace(',', '.')\n        )\n        const rendimentoAtual: number =\n          listaTemp[i - 1].aporteFinal * redimentoMensal\n        listaTemp.push({\n          mes: i + 1,\n          valorInicial: listaTemp[i - 1].aporteFinal,\n          rendimento: rendimentoAtual,\n          aporteFinal: aporteMe + listaTemp[i - 1].aporteFinal + rendimentoAtual\n        })\n\n        if (ano === i + 1) {\n          labelsLine.push(`Ano ${ano / 12}`)\n          const valor =\n            aporteMe + listaTemp[i - 1].aporteFinal + rendimentoAtual\n          dataLine.push(valor.toFixed(2))\n          ano = ano + 60\n        }\n      }\n    }\n\n    setDataSet([\n      {\n        label: 'Evolução Patrimônial',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: dataLine\n      }\n    ])\n    setLabels(labelsLine)\n    setLista(listaTemp)\n  }\n\n  function calcAporteMensal(e) {\n    if (e?.target.name === 'percentualAporte') {\n      setValue('percentualAporte', maskDecimal(e?.target.value))\n    }\n    if (e?.target.name === 'rendimentoAnual') {\n      setValue('rendimentoAnual', maskDecimal(e?.target.value))\n    }\n\n    const salarioMensal: number = parseFloat(\n      getValues('salarioMensal').toString().replace('.', '').replace(',', '.')\n    )\n    const percentualAporte: number =\n      parseFloat(getValues('percentualAporte').toString().replace(',', '.')) /\n      100\n    const aporteMensal: number = percentualAporte * salarioMensal\n\n    if (aporteMensal) {\n      setAporteMensal(maskMoney(Number(aporteMensal).toFixed(2).toString()))\n    } else {\n      setAporteMensal(maskMoney('000'))\n    }\n  }\n\n  function onChangeRemunaration(e) {\n    setValue('salarioMensal', maskMoney(e.target.value))\n    calcAporteMensal(undefined)\n  }\n\n  function onChangeLimpar() {\n    setValue('salarioMensal', undefined)\n    setValue('percentualAporte', undefined)\n    setValue('rendimentoAnual', undefined)\n    setAporteMensal('0,00')\n    setLista([])\n  }\n\n  useEffect(() => {\n    onChangeLimpar()\n    setShowModal(localStorage.getItem(window.location.pathname) === null)\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container>\n        <Row>\n          <Column>\n            <Controller\n              name=\"salarioMensal\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.salarioMensal !== undefined}\n                  id=\"standard-basic\"\n                  size=\"small\"\n                  fullWidth\n                  label={\n                    <Row>\n                      Salário Mensal{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado a sua renda mensal\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  onChange={onChangeRemunaration}\n                  placeholder=\"Informe sua renda mensal\"\n                  inputRef={register({\n                    required: 'Campo obrigatório'\n                  })}\n                  InputProps={{\n                    name: 'salarioMensal',\n                    startAdornment: (\n                      <InputAdornment position=\"start\">R$</InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n          <Column>\n            <Controller\n              name=\"percentualAporte\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.percentualAporte !== undefined}\n                  id=\"standard-basic\"\n                  label={\n                    <Row>\n                      Percentual do Aporte{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado a percentagem do quanto deseja reservar do seu salário para aplicar mensalmente\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  onChange={calcAporteMensal}\n                  placeholder=\"Percentual do salário que deseja investir por mês\"\n                  size=\"small\"\n                  fullWidth\n                  inputRef={register({\n                    required: 'Campo obrigatório',\n                    maxLength: 6\n                  })}\n                  inputProps={{\n                    maxLength: 6,\n                    name: 'percentualAporte'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <MoneyIcon />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column>\n            <label>Aporte Mensal</label>\n            <h2 style={{ color: '#000' }}>R$ {aporteMensal}</h2>\n          </Column>\n          <Column>\n            <Controller\n              name=\"rendimentoAnual\"\n              control={control}\n              render={() => (\n                <TextField\n                  error={errors.rendimentoAnual !== undefined}\n                  id=\"standard-basic\"\n                  label={\n                    <Row>\n                      Rendimento Anual{' '}\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Aqui será informado o redimento anual de suas aplicações\">\n                          <Info />\n                        </Tooltip>\n                      </InputAdornment>\n                    </Row>\n                  }\n                  onChange={calcAporteMensal}\n                  placeholder=\"Percentagem do redimento anual de suas aplicações\"\n                  inputRef={register({\n                    required: 'Campo obrigatório',\n                    maxLength: 6\n                  })}\n                  size=\"small\"\n                  fullWidth\n                  inputProps={{\n                    maxLength: 6\n                  }}\n                  InputProps={{\n                    name: 'rendimentoAnual',\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <TrendingUpIcon />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              )}\n            />\n          </Column>\n        </Row>\n        <Row style={{ justifyContent: 'flex-end' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginRight: '8px' }}\n            fullWidth\n          >\n            Calcular\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            onClick={onChangeLimpar}\n            fullWidth\n          >\n            Limpar\n          </Button>\n        </Row>\n      </Container>\n      {lista.length > 0 && (\n        <>\n          <Cards lista={lista} />\n          <LineChart labels={labels} dataSet={dataSet} />\n          <Button onClick={() => setShow(!show)}>\n            {show ? 'Esconder Detalhes' : 'Exibir Detalhes'}\n          </Button>\n          <HideShow show={show}>\n            <List lista={lista} />{' '}\n          </HideShow>\n        </>\n      )}\n    </form>\n  )\n}\n\nexport default FormCalcPorSalario\n"]},"metadata":{},"sourceType":"module"}