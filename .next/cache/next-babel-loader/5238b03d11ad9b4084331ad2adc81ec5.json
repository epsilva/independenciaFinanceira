{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport { motion, useCycle } from 'framer-motion';\nimport { useDimensions } from './use-dimensions';\nimport { MenuToggle } from './MenuToggle';\nimport { Navigation } from './Navigation';\nimport { Nav } from './styles';\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: 'spring',\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: 'circle(30px at 40px 40px)',\n    transition: {\n      delay: 0.5,\n      type: 'spring',\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\n\nconst Menu = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const {\n    height\n  } = useDimensions(containerRef);\n  const {\n    0: styled,\n    1: setStyled\n  } = useState({\n    openNav: false\n  });\n  useEffect(() => {\n    if (!isOpen) {\n      setTimeout(() => {\n        setStyled({\n          openNav: isOpen\n        });\n      }, 1000);\n    } else {\n      setStyled({\n        openNav: isOpen\n      });\n    }\n  }, [isOpen]);\n  return __jsx(Nav, {\n    openNav: styled.openNav,\n    initial: false,\n    animate: isOpen ? 'open' : 'closed',\n    custom: height,\n    ref: containerRef\n  }, __jsx(motion.div, {\n    className: \"background\",\n    variants: sidebar\n  }), __jsx(Navigation, {\n    toggle: () => toggleOpen()\n  }), __jsx(MenuToggle, {\n    toggle: () => toggleOpen()\n  }));\n};\n\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}