{"ast":null,"code":"var _jsxFileName = \"/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/Menu/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport { motion, useCycle } from 'framer-motion';\nimport { useDimensions } from './use-dimensions';\nimport { MenuToggle } from './MenuToggle';\nimport { Navigation } from './Navigation';\nimport { Nav } from './styles';\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: 'spring',\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: 'circle(30px at 40px 40px)',\n    transition: {\n      delay: 0.5,\n      type: 'spring',\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\n\nconst Menu = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const {\n    height\n  } = useDimensions(containerRef);\n  const {\n    0: styled,\n    1: setStyled\n  } = useState({\n    openNav: false\n  });\n  useEffect(() => {\n    if (!isOpen) {\n      setTimeout(() => {\n        setStyled({\n          openNav: isOpen\n        });\n      }, 1000);\n    } else {\n      setStyled({\n        openNav: isOpen\n      });\n    }\n  }, [isOpen]);\n  return __jsx(Nav, {\n    openNav: styled.openNav,\n    initial: false,\n    animate: isOpen ? 'open' : 'closed',\n    custom: height,\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    className: \"background\",\n    variants: sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(Navigation, {\n    toggle: () => toggleOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(MenuToggle, {\n    toggle: () => toggleOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Projetos/next-independencia-financeira/src/components/Menu/index.tsx"],"names":["React","useRef","useEffect","useState","motion","useCycle","useDimensions","MenuToggle","Navigation","Nav","sidebar","open","height","clipPath","transition","type","stiffness","restDelta","closed","delay","damping","Menu","isOpen","toggleOpen","containerRef","styled","setStyled","openNav","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,UAApB;AAGA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,CAACC,MAAM,GAAG,IAAV,MAAoB;AACxBC,IAAAA,QAAQ,EAAG,UAASD,MAAM,GAAG,CAAT,GAAa,GAAI,kBADb;AAExBE,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,SAAS,EAAE,EAFD;AAGVC,MAAAA,SAAS,EAAE;AAHD;AAFY,GAApB,CADQ;AASdC,EAAAA,MAAM,EAAE;AACNL,IAAAA,QAAQ,EAAE,2BADJ;AAENC,IAAAA,UAAU,EAAE;AACVK,MAAAA,KAAK,EAAE,GADG;AAEVJ,MAAAA,IAAI,EAAE,QAFI;AAGVC,MAAAA,SAAS,EAAE,GAHD;AAIVI,MAAAA,OAAO,EAAE;AAJC;AAFN;AATM,CAAhB;;AAoBA,MAAMC,IAAsB,GAAG,MAAM;AACnC,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBlB,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAArC;AACA,QAAMmB,YAAY,GAAGvB,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaN,aAAa,CAACkB,YAAD,CAAhC;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBvB,QAAQ,CAAS;AAAEwB,IAAAA,OAAO,EAAE;AAAX,GAAT,CAApC;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACoB,MAAL,EAAa;AACXM,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,SAAS,CAAC;AAAEC,UAAAA,OAAO,EAAEL;AAAX,SAAD,CAAT;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAJD,MAIO;AACLI,MAAAA,SAAS,CAAC;AAAEC,QAAAA,OAAO,EAAEL;AAAX,OAAD,CAAT;AACD;AACF,GARQ,EAQN,CAACA,MAAD,CARM,CAAT;AAUA,SACE,MAAC,GAAD;AACE,IAAA,OAAO,EAAEG,MAAM,CAACE,OADlB;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,OAAO,EAAEL,MAAM,GAAG,MAAH,GAAY,QAH7B;AAIE,IAAA,MAAM,EAAEV,MAJV;AAKE,IAAA,GAAG,EAAEY,YALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAmC,IAAA,QAAQ,EAAEd,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAAMa,UAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAAMA,UAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA7BD;;AA+BA,eAAeF,IAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { motion, useCycle } from 'framer-motion'\nimport { useDimensions } from './use-dimensions'\nimport { MenuToggle } from './MenuToggle'\nimport { Navigation } from './Navigation'\nimport { Nav } from './styles'\nimport { Styled } from '../types'\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: 'spring',\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: 'circle(30px at 40px 40px)',\n    transition: {\n      delay: 0.5,\n      type: 'spring',\n      stiffness: 400,\n      damping: 40\n    }\n  }\n}\n\nconst Menu: React.FC<Styled> = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true)\n  const containerRef = useRef(null)\n  const { height } = useDimensions(containerRef)\n  const [styled, setStyled] = useState<Styled>({ openNav: false })\n\n  useEffect(() => {\n    if (!isOpen) {\n      setTimeout(() => {\n        setStyled({ openNav: isOpen })\n      }, 1000)\n    } else {\n      setStyled({ openNav: isOpen })\n    }\n  }, [isOpen])\n\n  return (\n    <Nav\n      openNav={styled.openNav}\n      initial={false}\n      animate={isOpen ? 'open' : 'closed'}\n      custom={height}\n      ref={containerRef}\n    >\n      <motion.div className=\"background\" variants={sidebar} />\n      <Navigation toggle={() => toggleOpen()} />\n      <MenuToggle toggle={() => toggleOpen()} />\n    </Nav>\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}